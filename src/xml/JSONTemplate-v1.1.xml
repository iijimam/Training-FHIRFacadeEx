<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2022.1.3 (Build 668U)" ts="2023-07-04 11:07:55">
<Class name="FHIRCustom.CodeableConcept.AdmitSource">
<Description>
入院経路</Description>
<Super>%Persistent,FHIRTemplate.Util.CodeTable,FHIRTemplate.DataType.CodeableConceptBase</Super>
<TimeChanged>66351,77283.5916402</TimeChanged>
<TimeCreated>66283,49859.224409789</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://jpfhir.jp/fhir/Common/CodeSystem/admit-Source</Default>
</Parameter>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>code</Properties>
<Unique>1</Unique>
</Index>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
    "0;院内の他病棟からの転棟",
    "1;家庭からの入院",
    "4;他の病院・診療所の病棟からの転院",
    "5;介護施設・福祉施設に入所中",
    "8;院内で出生",
    "9;その他"
  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustom.CodC353.AdmitSourceD</DataLocation>
<DefaultData>AdmitSourceDefaultData</DefaultData>
<IdLocation>^FHIRCustom.CodC353.AdmitSourceD</IdLocation>
<IndexLocation>^FHIRCustom.CodC353.AdmitSourceI</IndexLocation>
<StreamLocation>^FHIRCustom.CodC353.AdmitSourceS</StreamLocation>
<Data name="AdmitSourceDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>display</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.CodeableConcept.ByomeiCode">
<Description>
MEDIS標準病名マスターの病名交換用コード</Description>
<Super>FHIRTemplate.DataType.CodeableConceptBase</Super>
<TimeChanged>66283,49860.371800732</TimeChanged>
<TimeCreated>66283,49860.371800732</TimeCreated>

<Parameter name="CodeSystem">
<Default>urn:oid:1.2.392.200119.4.101.6</Default>
</Parameter>

<Method name="GetByCode">
<Description>
コードからインスタンスを取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>FHIRCustom.CodeableConcept.ByomeiCode</ReturnType>
<Implementation><![CDATA[
        set display=""
        &SQL(SELECT Name INTO :display FROM FHIRCustom_DB.ByomeiCode WHERE code = :code)
        if SQLCODE=0 {
                set obj=..%New()
                set obj.code=code
                set obj.display=display
                quit obj
        }
        quit ""
]]></Implementation>
</Method>
</Class>


<Class name="FHIRCustom.CodeableConcept.ClinicalStatus">
<Super>%Persistent,FHIRTemplate.DataType.CodeableConceptBase,FHIRTemplate.Util.CodeTable</Super>
<TimeChanged>66351,77281.789268</TimeChanged>
<TimeCreated>66283,49862.475517123</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://terminology.hl7.org/CodeSystem/condition-clinical</Default>
</Parameter>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>code</Properties>
<Unique>1</Unique>
</Index>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
    "active;Lv0 active",
    "reccurence;Lv1 recurrence",
    "relapse;Lv1 relapse",
    "inactive;Lv0 inactive",
    "remission;Lv1 remission",
    "resolved;Lv1 resolved"
  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustomC353.ClinicalStatusD</DataLocation>
<DefaultData>ClinicalStatusDefaultData</DefaultData>
<IdLocation>^FHIRCustomC353.ClinicalStatusD</IdLocation>
<IndexLocation>^FHIRCustomC353.ClinicalStatusI</IndexLocation>
<StreamLocation>^FHIRCustomC353.ClinicalStatusS</StreamLocation>
<Data name="ClinicalStatusDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>display</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.CodeableConcept.DischargeCode">
<Description>
退院時転帰コード</Description>
<Super>%Persistent,FHIRTemplate.Util.CodeTable,FHIRTemplate.DataType.CodeableConceptBase</Super>
<TimeChanged>66351,77282.756462</TimeChanged>
<TimeCreated>66283,49863.521697589</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://jpfhir.jp/fhir/Common/CodeSystem/discharge-disposition</Default>
</Parameter>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>code</Properties>
<Unique>1</Unique>
</Index>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
"1;傷病が治癒・軽快",
"3;傷病（白血病、潰瘍性大腸炎、クローン病等）が寛解",
"4;傷病が不変",
"5;傷病が増悪",
"6;傷病による死亡",
"7;傷病以外による死亡",
"9;その他（検査入院,正常分娩及び人間ドック含む）"
  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustom.CC353.DischargeCodeD</DataLocation>
<DefaultData>DischargeCodeDefaultData</DefaultData>
<IdLocation>^FHIRCustom.CC353.DischargeCodeD</IdLocation>
<IndexLocation>^FHIRCustom.CC353.DischargeCodeI</IndexLocation>
<StreamLocation>^FHIRCustom.CC353.DischargeCodeS</StreamLocation>
<Data name="DischargeCodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>display</Value>
</Value>
<Value name="3">
<Value>version</Value>
</Value>
<Value name="4">
<Value>userSelected</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.CodeableConcept.DocCategory">
<Super>FHIRCustom.CodeableConcept.DocType</Super>
<TimeChanged>66283,49860.85954522</TimeChanged>
<TimeCreated>66283,49860.85954522</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://jpfhir.jp/fhir/eClinicalSummary/CodeSystem/eClinicalSummary-category</Default>
</Parameter>
</Class>


<Class name="FHIRCustom.CodeableConcept.DocSectionCode">
<Description>
文書タイプ</Description>
<Super>%Persistent,FHIRTemplate.DataType.CodeableConceptBase,FHIRTemplate.Util.CodeTable</Super>
<TimeChanged>66351,77294.3334521</TimeChanged>
<TimeCreated>66283,49869.588117938</TimeCreated>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>code</Properties>
<Unique>1</Unique>
</Index>

<Parameter name="CodeSystem">
<Default>http://jpfhir.jp/fhir/eClinicalSummary/CodeSystem/document-section</Default>
</Parameter>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
    "200;CDA参照;cda",
    "300;構造情報;structured",
    "322;入院詳細;detailsOnAdmission",
    "342;入院時診断;diagnosesOnAdmission",
    "510;アレルギー・不耐性反応;allergiesIntolerance",
    "352;入院時主訴;chiefProblemOnAdmission",
    "312;入院理由;reasonForAdmission",
    "362;入院時現病歴;presentIllnessOnAdmission",
    "372;入院時既往歴;pastIllnessOnAdmission",
    "432;入院時服薬;medicationsOnAdmission",
    "642;入院時社会歴;socialHistoryOnAdmission",
    "612;入院時身体所見;physicalStatusOnAdmission",
    "552;入院時家族歴;familiyHistoryOnAdmission",
    "333;入院中経過;hospitalCourse",
    "324;退院時詳細;detailsOnDischarge",
    "444;退院時投薬指示;medicationOnDischarge",
    "424;退院時方針指示;instructionOnDischarge",
    "614;退院時身体所見;physicalStatusOnDischarge",
    "713;入院中治療;hospitalProcedure",
    "623;入院中検査結果;hospitalStudy",
    "810;医療機器;medicalDevice",
    "530;予防接種歴;immunization",
    "410;事前指示;advanceDirective"
  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustomC353.DocSectionCodeD</DataLocation>
<DefaultData>DocSectionCodeDefaultData</DefaultData>
<IdLocation>^FHIRCustomC353.DocSectionCodeD</IdLocation>
<IndexLocation>^FHIRCustomC353.DocSectionCodeI</IndexLocation>
<StreamLocation>^FHIRCustomC353.DocSectionCodeS</StreamLocation>
<Data name="DocSectionCodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>display</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.CodeableConcept.DocType">
<Description>
文書タイプ</Description>
<Super>FHIRTemplate.DataType.CodeableConceptBase</Super>
<TimeChanged>66283,49858.140557528</TimeChanged>
<TimeCreated>66283,49858.140557528</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://jpfhir.jp/fhir/Common/CodeSystem/doc-typecodes</Default>
</Parameter>

<Method name="GetByCode">
<Description>
コードからインスタンスを取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>FHIRTemplate.DataType.CodeableConceptBase</ReturnType>
<Implementation><![CDATA[
    set obj=..%New()
    if code="18842-5" {
        set obj.code=code
        set obj.display="退院時サマリー"
    } else {
        set obj.code="57133-1"
        set obj.display="診療情報提供書"
    }
    quit obj
]]></Implementation>
</Method>
</Class>


<Class name="FHIRCustom.CodeableConcept.ModifierCode">
<Description>
MEDIS標準病名マスターの修飾語交換用コード</Description>
<Super>FHIRTemplate.DataType.CodeableConceptBase</Super>
<TimeChanged>66283,49862.48653996</TimeChanged>
<TimeCreated>66283,49862.48653996</TimeCreated>

<Parameter name="CodeSystem">
<Default>urn:oid:1.2.392.200119.4.201.5</Default>
</Parameter>

<Method name="GetByCode">
<Description>
コードからインスタンスを取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>FHIRCustom.CodeableConcept.ModifierCode</ReturnType>
<Implementation><![CDATA[
        set display=""
        &SQL(SELECT Name INTO :display FROM FHIRCustom_DB.ModifierCode WHERE code = :code)
        if SQLCODE=0 {
                set obj=..%New()
                set obj.code=code
                set obj.display=display
                quit obj
        }
        quit ""
]]></Implementation>
</Method>
</Class>


<Class name="FHIRCustom.CodeableConcept.VerificationStatus">
<Super>%Persistent,FHIRTemplate.DataType.CodeableConceptBase,FHIRTemplate.Util.CodeTable</Super>
<TimeChanged>66351,77300.0057811</TimeChanged>
<TimeCreated>66283,49868.828253104</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://terminology.hl7.org/CodeSystem/condition-ver-status</Default>
</Parameter>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>code</Properties>
<Unique>1</Unique>
</Index>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
    "unconfirmed;Lv0 Unconfirmed",
    "provisional;Lv1 Provisional",
    "differential;Lv1 Differential",
    "confirmed;Lv0 Confirmed",
    "refuted;Lv0 Refuted",
    "entered-in-error;Lv0 Entered in Error"
  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustomC353.VerificatioF38FD</DataLocation>
<DefaultData>VerificationStatusDefaultData</DefaultData>
<IdLocation>^FHIRCustomC353.VerificatioF38FD</IdLocation>
<IndexLocation>^FHIRCustomC353.VerificatioF38FI</IndexLocation>
<StreamLocation>^FHIRCustomC353.VerificatioF38FS</StreamLocation>
<Data name="VerificationStatusDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>display</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.Coding.ActCode">
<Description>
入院外来分類</Description>
<Super>FHIRTemplate.DataType.CodingBase</Super>
<TimeChanged>66283,49858.93862952</TimeChanged>
<TimeCreated>66283,49858.93862952</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://terminology.hl7.org/CodeSystem/v3-ActCode</Default>
</Parameter>

<Method name="GetByCode">
<Description>
コードからインスタンスを取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>FHIRTemplate.DataType.CodingBase</ReturnType>
<Implementation><![CDATA[
    set obj=..%New()
    if code="IMP" {
        set obj.code=code
        set obj.display="入院"
    } else {
        set obj.code="AMB"
        set obj.display="外来"
    }
    quit obj
]]></Implementation>
</Method>
</Class>


<Class name="FHIRCustom.Coding.DiagnosisRoleCode">
<Description>
文書カテゴリ</Description>
<Super>%Persistent,FHIRTemplate.Util.CodeTable,FHIRTemplate.DataType.CodingBase</Super>
<TimeChanged>66351,77307.4310729</TimeChanged>
<TimeCreated>66283,49868.036816964</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://terminology.hl7.org/CodeSystem/diagnosis-role</Default>
</Parameter>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>code</Properties>
<Unique>1</Unique>
</Index>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
    "AD;入院時診断",
    "DD;退院時診断",
    "CC;主訴",
    "CM;併存症診断",
    "pre-op;術前診断",
    "post-op;術後診断",
    "billing;会計請求診断"
  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustomF1F6.DiagnosisRo8DCFD</DataLocation>
<DefaultData>DiagnosisRoleCodeDefaultData</DefaultData>
<IdLocation>^FHIRCustomF1F6.DiagnosisRo8DCFD</IdLocation>
<IndexLocation>^FHIRCustomF1F6.DiagnosisRo8DCFI</IndexLocation>
<StreamLocation>^FHIRCustomF1F6.DiagnosisRo8DCFS</StreamLocation>
<Data name="DiagnosisRoleCodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>display</Value>
</Value>
<Value name="3">
<Value>version</Value>
</Value>
<Value name="4">
<Value>userSelected</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.Coding.JLAC10Code">
<Super>FHIRTemplate.DataType.CodingBase</Super>
<TimeChanged>66283,49861.664200668</TimeChanged>
<TimeCreated>66283,49861.664200668</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://jpfhir.jp/fhir/eCheckup/CodeSystem/jlac10</Default>
</Parameter>

<Method name="GetByCode">
<Description>
コードからインスタンスを取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>JLAC10Code</ReturnType>
<Implementation><![CDATA[
        set display=""
        &SQL(SELECT Name INTO :display FROM FHIRMaster.JLAC10Code WHERE code = :code)
        if SQLCODE=0 {
                set obj=..%New()
                set obj.code=code
                set obj.display=display
                quit obj
        }
        quit ""
]]></Implementation>
</Method>
</Class>


<Class name="FHIRCustom.Coding.OrganizationType">
<Description>
入院外来分類</Description>
<Super>FHIRTemplate.DataType.CodingBase</Super>
<TimeChanged>66283,49858.362097633</TimeChanged>
<TimeCreated>66283,49858.362097633</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://terminology.hl7.org/CodeSystem/organization-type</Default>
</Parameter>
</Class>


<Class name="FHIRCustom.DB.ByomeiCode">
<Description>
傷病名マスターサンプル</Description>
<Super>%Persistent</Super>
<TimeChanged>66351,77314.6086624</TimeChanged>
<TimeCreated>66283,49858.648224659</TimeCreated>

<Property name="Code">
<Description>
コード</Description>
<Type>%String</Type>
</Property>

<Property name="Name">
<Description>
名称</Description>
<Type>%String</Type>
</Property>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>Code</Properties>
<Unique>1</Unique>
</Index>

<Method name="ImportData">
<Description>
データのインポート
nmain509.txtを読み込む</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        do ..%KillExtent()
        set file=##class(%Stream.FileCharacter).%New()
        set ret=file.LinkToFile( filename )
        quit:$$$ISERR(ret)

        while 'file.AtEnd {
            set line=file.ReadLine()
            if $length(line,""",""")>=6 {
                set obj=..%New()
                set obj.Code=$piece(line,""",""",6)
                set obj.Name=$piece(line,""",""",3)
                set ret=obj.%Save()
                //quit:$$$ISERR(ret)
            }
        }
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustom.DB.ByomeiCodeD</DataLocation>
<DefaultData>ByomeiCodeDefaultData</DefaultData>
<IdLocation>^FHIRCustom.DB.ByomeiCodeD</IdLocation>
<IndexLocation>^FHIRCustom.DB.ByomeiCodeI</IndexLocation>
<StreamLocation>^FHIRCustom.DB.ByomeiCodeS</StreamLocation>
<Data name="ByomeiCodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.DB.JLAC10Code">
<Description>
JLAC10Codeマスターサンプル</Description>
<Super>%Persistent</Super>
<TimeChanged>66351,77313.6679322</TimeChanged>
<TimeCreated>66283,49858.641011659</TimeCreated>

<Property name="Code">
<Description>
コード</Description>
<Type>%String</Type>
</Property>

<Property name="Name">
<Description>
検査名称</Description>
<Type>%String</Type>
</Property>

<Property name="BrandName">
<Description>
販売名</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Property name="CompanyName">
<Description>
製造販売業者</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="255"/>
</Property>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>Code</Properties>
<Unique>1</Unique>
</Index>

<Method name="ImportData">
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        do ..%KillExtent()
        set file=##class(%Stream.FileCharacter).%New()
        set ret=file.LinkToFile( filename )
        quit:$$$ISERR(ret)

        while 'file.AtEnd {
            set line=file.ReadLine()
            if $length(line,"|")>=21 {
                set obj=..%New()
                set obj.Code=$translate($piece(line,"|",21),"-","")
                set obj.Name=$piece(line,"|",7)
                set obj.BrandName=$piece(line,"|",4)
                set obj.CompanyName=$piece(line,"|",6)
                set ret=obj.%Save()
                //quit:$$$ISERR(ret)
            }
        }
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustom.DB.JLAC10CodeD</DataLocation>
<DefaultData>JLAC10CodeDefaultData</DefaultData>
<IdLocation>^FHIRCustom.DB.JLAC10CodeD</IdLocation>
<IndexLocation>^FHIRCustom.DB.JLAC10CodeI</IndexLocation>
<StreamLocation>^FHIRCustom.DB.JLAC10CodeS</StreamLocation>
<Data name="JLAC10CodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>BrandName</Value>
</Value>
<Value name="4">
<Value>CompanyName</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.DB.ModifierCode">
<Description>
修飾語交換用コードテーブルサンプル</Description>
<Super>%Persistent</Super>
<TimeChanged>66351,77292.8916343</TimeChanged>
<TimeCreated>66283,49865.548253271</TimeCreated>

<Property name="Code">
<Description>
コード</Description>
<Type>%String</Type>
</Property>

<Property name="Name">
<Description>
名称</Description>
<Type>%String</Type>
</Property>

<Index name="IDKeyIdx">
<IdKey>1</IdKey>
<Properties>Code</Properties>
<Unique>1</Unique>
</Index>

<Method name="ImportData">
<Description>
データのインポート
mdfy509.txtを読み込む</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        do ..%KillExtent()
        set file=##class(%Stream.FileCharacter).%New()
        set ret=file.LinkToFile( filename )
        quit:$$$ISERR(ret)

        while 'file.AtEnd {
            set line=file.ReadLine()
            if $length(line,""",""")>=5 {
                set obj=..%New()
                set obj.Code=$piece(line,""",""",5)
                set obj.Name=$piece(line,""",""",3)
                set ret=obj.%Save()
                //quit:$$$ISERR(ret)
            }
        }
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRCustom.DB.ModifierCodeD</DataLocation>
<DefaultData>ModifierCodeDefaultData</DefaultData>
<IdLocation>^FHIRCustom.DB.ModifierCodeD</IdLocation>
<IndexLocation>^FHIRCustom.DB.ModifierCodeI</IndexLocation>
<StreamLocation>^FHIRCustom.DB.ModifierCodeS</StreamLocation>
<Data name="ModifierCodeDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRCustom.Evidence">
<Description>
コード付き参照テンプレート
 FHIR規格では プロパティはconceptとreferenceとなっているが、
 退院時サマリの仕様書では code,detailとなっているので、
 こちらに合わせておく</Description>
<Super>FHIRTemplate.ResourceBase</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49868.127143207</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"code": [
    "#(..code)#"
  ],
  "detail": [
    "#(..detail(FHIRTemplate.Reference))#"
  ]
}
]]></Data>
</XData>

<Property name="code">
<Type>FHIRCustom.CodeableConcept.ByomeiCode</Type>
</Property>

<Property name="detail">
<Type>FHIRTemplate.Resource</Type>
</Property>
</Class>


<Class name="FHIRCustom.PatientReference">
<Description>
患者参照テンプレート
単なるリファレンスだけでなく、患者氏名をdisplayプロパティに出力</Description>
<Super>FHIRTemplate.Patient</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49858.142393405</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"reference": "urn:uuid:#(..ResourceId)#",
  "display": "#(..LastName)# #(..FirstName)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.AllergyIntolerance">
<Super>FHIRTemplate.Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49866.529289602</TimeCreated>

<Parameter name="ResourceType">
<Default>AllergyIntolerance</Default>
</Parameter>

<Parameter name="ClinicalStatusCode">
<Description>
FHIRCustom.ClinicalStatus利用時未使用</Description>
<Default>active,inactive,resolved</Default>
</Parameter>

<Parameter name="ClinicalStatusDisplay">
<Description>
FHIRCustom.ClinicalStatus利用時未使用</Description>
<Default>現存,非現存,解消</Default>
</Parameter>

<Parameter name="VerificationStatusCode">
<Description>
FHIRCustom.VerificationStatus利用時未使用</Description>
<Default>unconfirmed,confirmed,refuted,entered-in-error</Default>
</Parameter>

<Parameter name="VerificationStatusDisplay">
<Description>
FHIRCustom.VerificationStatus利用時未使用</Description>
<Default>未確認,確認済,否定,エラー</Default>
</Parameter>

<Property name="TextDiv">
<Type>%String</Type>
<Parameter name="MAXLEN" value="10000"/>
</Property>

<Property name="IdentifierValue">
<Description>
identifier.value</Description>
<Type>%String</Type>
</Property>

<Property name="ClinicalStatus">
<Description>
FHIRCustom.DataType.ClinicalStatus利用の為タイプを%Stringに設定</Description>
<Type>%String</Type>
</Property>

<Property name="VerificationStatus">
<Description>
FHIRCustom.DataType.VerificationStatus利用の為タイプを%Stringに設定</Description>
<Type>%String</Type>
</Property>

<Property name="Type">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",allergy,intolerance"/>
</Property>

<Property name="Category">
<Description>
DISPLAYLIST = ",食物,医薬品,環境,生物学的"</Description>
<Type>%String</Type>
<Parameter name="VALUELIST" value=",food,medication,environment,biologic"/>
</Property>

<Property name="Criticality">
<Description>
DISPLAYLIST = ",低,高,評価不能".DataType</Description>
<Type>%String</Type>
<Parameter name="VALUELIST" value=",low,high,unable-to-assess"/>
</Property>

<Property name="Code">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="Patient">
<Description>
Patient</Description>
<Type>FHIRTemplate.Patient</Type>
</Property>

<Property name="Encounter">
<Description>
Encounter</Description>
<Type>FHIRTemplate.Encounter</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "resourceType": "#(..#ResourceType)#",
    "meta": {
        "profile": ["http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_AllergyIntolerance_eClinicalSummary"]
    },
    "text":{
        "status":"generated",
        "div":"#(..TextDiv)#"
    },
    "identifier":[
        {
        "system":"http://jpfhir.jp/fhir/Common/CodeSystem/resourceInstance-identifier",
        "value":"#(..IdentifierValue)#"
        }
    ],
    "clinicalStatus": "#(..ClinicalStatus(FHIRCustom.CodeableConcept.ClinicalStatus))#",
    "verificationStatus":"#(..VerificationStatus(FHIRCustom.CodeableConcept.VerificationStatus))#",
    "type":"#(..Type)#",
    "category": ["#(..Category)#"],
    "criticality":"#(..Criticality)#",
    "code": "#(..Code)#",
    "patient":"#(..Patient(FHIRTemplate.Reference))#",
    "encounter":"#(..Encounter(FHIRTemplate.Reference))#"
}
]]></Data>
</XData>

<Method name="GetResources">
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    // 自分自身を登録
    set ret=##super(br)
    quit:ret<1 ret // 既に登録されていれば終了

    //関連リソースの取り込み
    do:$isobject(..Patient) ..Patient.GetResources(br)
    do:$isobject(..Encounter) ..Encounter.GetResources(br)
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Bundle">
<Description>
患者リソース</Description>
<Super>FHIRTemplate.Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49866.16992593</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "resourceType": "#(..#ResourceType)#",
  "meta": {
    "profile": [ "#(..#Profile)#" ]
  },
  "type": "#(..type)#",
  "timestamp": "#(..timeStamp)#",
  "entry": [
    "#(..resource(FHIRTemplate.Bundle.entry))#"
      ],
  "signature": {
    "type": [
      {
      "system": "urn:iso-astm:E1762-95:2013",
      "code": "1.2.840.10065.1.12.1.1"
      }
    ],
    "when": "#(..signatureDate)#",
    "who": "#(..attester(FHIRTemplate.Reference))#",
    "data": "#(..signatureData)#"
  }
  }
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Bundle</Default>
</Parameter>

<Parameter name="Profile">
<Default>http://jpfhir.jp/fhir/eDischargeSummary/StructureDefinition/JP_Bundle_eDischargeSummary</Default>
</Parameter>

<Property name="type">
<Description>
bundleタイプ</Description>
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="timeStamp">
<Description>
作成時刻</Description>
<Type>FHIRTemplate.DataType.TimeStamp</Type>
</Property>

<Property name="resource">
<Description>
バンドルリソース</Description>
<Type>Resource</Type>
<Collection>list</Collection>
</Property>

<Property name="signatureDate">
<Description>
署名時刻</Description>
<Type>FHIRTemplate.DataType.TimeStamp</Type>
</Property>

<Property name="attester">
<Description>
文書法的責任者</Description>
<Type>FHIRTemplate.Practitioner</Type>
</Property>

<Property name="signatureData">
<Description>
署名データ</Description>
<Type>%String</Type>
</Property>

<Property name="CertificateData">
<Description>
証明書データ
秘密鍵の証明書ファイルの内容</Description>
<Type>%String</Type>
</Property>

<Property name="requestMethod">
<Description>
リクエストメソッド</Description>
<Type>%String</Type>
<InitialExpression>"POST"</InitialExpression>
</Property>

<Method name="OnPreProcess">
<ClassMethod>1</ClassMethod>
<FormalSpec>obj:JSONTemplate.Base</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  // transactionモードの場合、各リソースにrequestMethod、requestURLを追加する
  if obj.type="transaction" {
    set key="" for {
      set entry=obj.resource.GetNext(.key)
      quit:key=""

      set entry.requestMethod = obj.requestMethod
      set entry.requestUrl = entry.#ResourceType
    }
  }
  quit $$$OK
]]></Implementation>
</Method>

<Method name="CreateFHIRDocument">
<Description>
FHIRドキュメントの作成</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>composition:Composition,attester:Practitioner=""</FormalSpec>
<ReturnType>Bundle</ReturnType>
<Implementation><![CDATA[
  set obj=..%New()
  set obj.type="document"
  set obj.timeStamp = $now()
  
  // bundleリソース管理クラスのインスタンスを取得
  set br=##class(FHIRTemplate.Util.BundleResource).%New()
  
  // 指定されたCompositionリソースから関連するリソースを取得
  do composition.GetResources(br)


  // 文書法的責任者が指定されていればそのリソースも登録
  if $isobject(attester) {
    set obj.attester=attester
    do br.AddResource(attester)
  }

  // 取得した関連リソースをBundleに登録
  do br.ExportResources(obj.resource)

  quit obj
]]></Implementation>
</Method>

<Method name="OutputToDynamicObject">
<Description>
ダイナミックオブジェクトへの出力</Description>
<FormalSpec><![CDATA[&obj:%DynamicAbstractObject]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set ret=$$$OK
  try {

    // CertificateDataに証明書があれば、署名を追加する
    if ..CertificateData'="" {
      set ..signatureData=""
      set ..signatureDate=$ztimestamp
    }

    set obj=..Process($this,.ret)
    quit:$$$ISERR(ret)

    // CertificateDataに証明書があれば、署名を追加する
    if ..CertificateData'="" {
    	Set body=obj.%ToJSON()
    	Set body=$zcvt(body,"O","UTF8")
	    Set b64body=$$$BASE64URLENCODE(body)

	    Set b64header=$$$BASE64URLENCODE("{""typ"":""JWT"",""alg"":""RS256""}")

      set ret=##class(%OAuth2.JWK).RSAJWKtoASN1(..CertificateData,.privateKey)

    	Set sig=$SYSTEM.Encryption.RSASHASign(256,b64header_"."_b64body,privateKey)
    	If (sig="") {
    		Set ret=$$$ERROR($$$OAuth2RSASignatureError,$SYSTEM.Encryption.RSAGetLastError())
		    Quit
	    }
    	Set b64sig=$$$BASE64URLENCODE(sig)

      // 署名データの登録
	    set obj.signature.data=b64header_".."_b64sig
    }	
  } catch err {
    set ret=err.AsStatus()
  }
  if $$$ISERR(ret) {
    set obj=""
  }
  quit ret
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Bundle.entry">
<Description>
Bundle Entry
Bundle内でリソースを保持する</Description>
<Super>FHIRTemplate.ResourceBase</Super>
<TimeChanged>66351,77205.9246797</TimeChanged>
<TimeCreated>66283,49862.948528645</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート
JSONの値の文字列に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"fullUrl": "urn:uuid:#(..ResourceId)#",
	"resource": "#($this)#",
	"request": {
		"method": "#(..requestMethod)#",
		"url": "#(..requestUrl)#"
	}
}
]]></Data>
</XData>

<Property name="requestMethod">
<Type>%String</Type>
</Property>

<Property name="requestUrl">
<Type>%String</Type>
</Property>
</Class>


<Class name="FHIRTemplate.CarePlan">
<Super>Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49865.993097008</TimeCreated>

<Parameter name="ResourceType">
<Default>CarePlan</Default>
</Parameter>

<Parameter name="CategorySystem">
<Default>http://jpfhir.jp/fhir/CarePlan/CodeSystem/category</Default>
</Parameter>

<Parameter name="CategoryDisplay">
<Default>discharge-plan,hospital-plan</Default>
</Parameter>

<Property name="TextDiv">
<Type>%String</Type>
<Parameter name="MAXLEN" value="10000"/>
</Property>

<Property name="IdentifierValue">
<Description>
identifier.value</Description>
<Type>%String</Type>
</Property>

<Property name="Status">
<Description>
statusvDISPLAYLIST = ",案,有効,保留,取消,完了,エラー,不明"</Description>
<Type>%String</Type>
<Parameter name="VALUELIST" value=",draft,active,on-hold,revoked,completed,entered-in-error,unknown"/>
</Property>

<Property name="Intent">
<Description>
intent DISPLAYLIST = ",提案,計画,指示,オプション",</Description>
<Type>%String</Type>
<Parameter name="VALUELIST" value=",proposal,plan,order,option"/>
</Property>

<Property name="Category">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="Description">
<Type>%String</Type>
<Parameter name="MAXLEN" value="10000"/>
</Property>

<Property name="Patient">
<Description>
Patient</Description>
<Type>FHIRTemplate.Patient</Type>
</Property>

<Property name="Encounter">
<Description>
Encounter</Description>
<Type>FHIRTemplate.Encounter</Type>
</Property>

<Property name="Practitioner">
<Description>
Practitioner</Description>
<Type>FHIRTemplate.Practitioner</Type>
</Property>

<Property name="Period">
<Type>FHIRTemplate.DataType.Period</Type>
</Property>

<Property name="CreationTime">
<Type>FHIRTemplate.DataType.TimeStamp</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "resourceType": "#(..#ResourceType)#",
    "meta": {
        "profile": ["http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_CarePlan_eClinicalSummary"]
    },
    "text": {
        "status": "generated",
        "div": "#(..TextDiv)#"
    },
    "identifier": [
        {
            "system":"http://jpfhir.jp/fhir/Common/CodeSystem/resourceInstance-identifier",
            "value": "#(..IdentifierValue)#"
        }
],    
    "status": "#(..Status)#",
    "intent": "#(..Intent)#",
    "category": [ "#(..Category(FHIRTemplate.DataType.CodeableConcept))#"],
    "title":"退院時の方針",
    "description":"#(..Description)#",
    "subject":"#(..Patient(FHIRTemplate.Reference))#",
    "encounter": "#(..Encounter(FHIRTemplate.Reference))#",
    "period": "#(..Period)#",
    "created":"#(..CreationTime)#",
    "author":"#(..Practitioner(FHIRTemplate.Reference))#"
}
]]></Data>
</XData>

<Method name="GetResources">
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    // 自分自身を登録
    set ret=##super(br)
    quit:ret<1 ret // 既に登録されていれば終了

    //関連リソースの取り込み
    do:$isobject(..Patient) ..Patient.GetResources(br)
    do:$isobject(..Encounter) ..Encounter.GetResources(br)
    do:$isobject(..Practitioner) ..Practitioner.GetResources(br)
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Composition">
<Description>
文書構成リソース</Description>
<Super>FHIRTemplate.Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49862.113306664</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "resourceType": "#(..#ResourceType)#",
  "meta": {
    "profile": [
      "#(..#Profile)#"
    ]
  },
  "extension":[
    {
    "url":"http://hl7.org/fhir/StructureDefinition/composition-clinicaldocumentversionNumber",
    "valueString":"#(..docVer)#"
    }
  ],
  "identifier":{
    "system":"http://jpfhir.jp/fhir/Common/CodeSystem/resourceInstanceidentifier",
    "value":"#(..docId)#"
  },
  "status":"#(..status)#",
  "type":"#(..docType(FHIRCustom.CodeableConcept.DocType))#",
  "category":[
    "#(..docCategory(FHIRCustom.CodeableConcept.DocCategory))#"
  ],
  "subject": "#(..subject(Reference))#",
  "encounter": "#(..encounter(Reference))#",
  "date":"#(..date)#",
  "author":[
    "#(..author(Reference))#",
    "#(..authorOrg(Reference))#"
  ],
  "title": "#(..title)#",
  "custodian": "#(..custodian(Reference))#",
  "event": [
  {
    "code": "#(..eventCode)#",
    "period": "#(..eventPeriod)#"
  }
  ],
  "section": [
    "#(..section)#"
  ]
}
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Composition</Default>
</Parameter>

<Parameter name="Profile">
<Default>http://jpfhir.jp/fhir/eDischargeSummary/StructureDefinition/JP_Composition_eDischargeSummary</Default>
</Parameter>

<Property name="status">
<Type>%Integer</Type>
<Parameter name="DISPLAYLIST" value=",preliminary,final,amended,entered-in-error"/>
<Parameter name="VALUELIST" value=",0,1,-1,-2"/>
</Property>

<Property name="docId">
<Type>%String</Type>
</Property>

<Property name="docVer">
<Type>%String</Type>
</Property>

<Property name="docType">
<Type>%String</Type>
</Property>

<Property name="docCategory">
<Type>%String</Type>
</Property>

<Property name="subject">
<Type>Patient</Type>
</Property>

<Property name="author">
<Type>Practitioner</Type>
</Property>

<Property name="attester">
<Type>Practitioner</Type>
</Property>

<Property name="authorOrg">
<Type>Organization</Type>
</Property>

<Property name="custodian">
<Type>Organization</Type>
</Property>

<Property name="encounter">
<Type>Encounter</Type>
</Property>

<Property name="date">
<Type>FHIRTemplate.DataType.TimeStamp</Type>
<Parameter name="FORMAT" value="1"/>
</Property>

<Property name="title">
<Type>%String</Type>
</Property>

<Property name="eventCode">
<Type>FHIRTemplate.DataType.Coding</Type>
</Property>

<Property name="eventPeriod">
<Type>FHIRTemplate.DataType.Period</Type>
</Property>

<Property name="section">
<Type>FHIRTemplate.Composition.section</Type>
<Collection>list</Collection>
</Property>

<Method name="GetResources">
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
  // 自分自身を登録
  set ret=br.AddResource($this)
  quit:ret<1 ret // 既に登録されていれば終了

  // 関連リソースの取り込み
  do:$isobject(..subject) ..subject.GetResources(br)
  do:$isobject(..author) ..author.GetResources(br)
  do:$isobject(..attester) ..attester.GetResources(br)
  do:$isobject(..authorOrg) ..authorOrg.GetResources(br)
  do:$isobject(..custodian) ..custodian.GetResources(br)
  do:$isobject(..encounter) ..encounter.GetResources(br)
  set key="" for {
    set section=..section.GetNext(.key)
    quit:key=""

    do section.GetResources(br)
  }
  quit ret
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Composition.section">
<Description>
セクション
 CompositionリソースのSection部分</Description>
<Super>JSONTemplate.Base</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49859.588176621</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "title": "#(..title)#",
  "code": "#(..code(FHIRCustom.CodeableConcept.DocSectionCode))#",
  "text": {
    "status":"additional",
    "div":"#(..textDiv)#"
  },
  "entry":[
    "#(..entry(FHIRTemplate.Reference))#"
  ],
  "section":[
    "#(..section)#"
  ]
}
]]></Data>
</XData>

<Property name="status">
<Type>%Integer</Type>
<Parameter name="DISPLAYLIST" value=",generated,extensions,additional,empty"/>
<Parameter name="VALUELIST" value=",3,2,1,0"/>
</Property>

<Property name="textDiv">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<Property name="title">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="entry">
<Type>FHIRTemplate.Resource</Type>
<Collection>list</Collection>
</Property>

<Property name="date">
<Type>FHIRTemplate.DataType.TimeStamp</Type>
<Parameter name="FORMAT" value="1"/>
</Property>

<Property name="section">
<Type>FHIRTemplate.Composition.section</Type>
<Collection>list</Collection>
</Property>

<Method name="CreateSection">
<Description>
セクションの作成</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[code:%String,title:%String="",&sc:%Status]]></FormalSpec>
<ReturnType>section</ReturnType>
<Implementation><![CDATA[
  set sc=$$$OK
  set obj=..%New()
  set obj.code=##class(FHIRCustom.CodeableConcept.DocSectionCode).GetByCode(code)
  set obj.title=$select(title'="":title,1:obj.code.display)
  quit obj
]]></Implementation>
</Method>

<Method name="GetResources">
<Description>
リソースの取得</Description>
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
  set key="" for {
    set entry=..entry.GetNext(.key)
    quit:key=""

    do entry.GetResources(br)
  }
  set key="" for {
    set section=..section.GetNext(.key)
    quit:key=""

    do section.GetResources(br)
  }
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Condition">
<Super>Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49859.793531719</TimeCreated>

<Parameter name="ResourceType">
<Default>Condition</Default>
</Parameter>

<Property name="textDiv">
<Type>FHIRTemplate.DataType.Narrative</Type>
</Property>

<Property name="patientStatusValue">
<Description>
identifier.valueの値</Description>
<Type>%String</Type>
</Property>

<Property name="clinicalStatus">
<Type>%String</Type>
</Property>

<Property name="verificationStatus">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="bodySite">
<Type>%String</Type>
</Property>

<Property name="subject">
<Type>FHIRTemplate.Patient</Type>
</Property>

<Property name="encounter">
<Type>FHIRTemplate.Encounter</Type>
</Property>

<Property name="age">
<Type>FHIRTemplate.DataType.Age</Type>
</Property>

<Property name="recordedDate">
<Type>FHIRTemplate.DataType.TimeStamp</Type>
<Parameter name="FORMAT" value="3"/>
</Property>

<Property name="evidence">
<Type>FHIRCustom.Evidence</Type>
<Collection>list</Collection>
</Property>

<XData name="Template">
<Description>
固定値
meta.profile/</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "resourceType" : "#(..#ResourceType)#",
    "meta":{
        "profile":[
            "http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_Condition_eClinicalSummary"
        ]
    },
    "text" : "#(..textDiv)#",
    "identifier":[
        {
            "system":"http://jpfhir.jp/fhir/Common/CodeSystem/resourceInstance-identifier",
            "value":"#(..patientStatusValue)#"
        }
    ],
    "clinicalStatus":"#(..clinicalStatus(FHIRCustom.CodeableConcept.ClinicalStatus))#",
    "verificationStatus" : "#(..verificationStatus(FHIRCustom.CodeableConcept.VerificationStatus))#",
    "code": "#(..code(FHIRCustom.CodeableConcept.ByomeiCode))#",
    "bodySite": [ "#(..bodySite(FHIRCustom.CodeableConcept.ModifierCode))#" ],
    "subject" : "#(..subject(FHIRCustom.PatientReference))#",
    "encounter": "#(..encounter(Reference))#",
    "onsetAge": "#(..age)#",
    "recordedDate": "#(..recordedDate)#",
    "evidence": [ "#(..evidence)#" ]
}
]]></Data>
</XData>

<Method name="GetResources">
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
  // 自分自身を登録
  set ret=##super(br)
  quit:ret<1 ret // 既に登録されていれば終了

  // 関連リソースの取り込み
  do:$isobject(..subject) ..subject.GetResources(br)
  do:$isobject(..encounter) ..encounter.GetResources(br)

  set key="" for {
    set evidence=..evidence.GetNext(.key)
    quit:key=""

    if $isobject(evidence) {
        if $isobject(evidence.detail) {
            do evidence.detail.GetResources(br)
        }
    }
  }
  quit ret
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.DataType.Address">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49861.124958533</TimeCreated>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "use":"#(..use)#",
        "type":"#(..type)#",
        "text":"#(..text)#",
        "line": ["#(..line)#"],
        "city": "#(..city)#",
        "district":"#(..district)#",
        "state":"#(..state)#",
        "postalCode":"#(..postalCode)#",
        "country":"JP"
}
]]></Data>
</XData>

<Property name="use">
<Type>%String</Type>
</Property>

<Property name="type">
<Type>%String</Type>
</Property>

<Property name="text">
<Type>%String</Type>
</Property>

<Property name="line">
<Type>%String</Type>
</Property>

<Property name="city">
<Type>%String</Type>
</Property>

<Property name="district">
<Type>%String</Type>
</Property>

<Property name="state">
<Type>%String</Type>
</Property>

<Property name="postalCode">
<Type>%String</Type>
</Property>

<Property name="country">
<Type>%String</Type>
</Property>

<Property name="period">
<Type>Period</Type>
</Property>

<Method name="OnPreProcess">
<Description>
JSON出力前処理
JSONを出力する前に実行されるコールバック</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>obj:FHIRTemplate.Resource</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   if obj.text=""&&((obj.state'="")||(obj.city'="")) {
        set obj.text=obj.state_obj.city_obj.line
   }
   quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.DataType.Age">
<Super>FHIRTemplate.DataType.Quantity</Super>
<TimeChanged>66283,49861.826907149</TimeChanged>
<TimeCreated>66283,49861.826907149</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://unitsofmeasure.org</Default>
</Parameter>

<Property name="code">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",min,h,d,wk,mo,a"/>
</Property>
</Class>


<Class name="FHIRTemplate.DataType.CodeableConcept">
<Description>
CodableConcept</Description>
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49864.160398775</TimeChanged>
<TimeCreated>66283,49864.160398775</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"coding": [
		{
			"system": "#(..system)#",
			"code": "#(..code)#",
			"display": "#(..display)#"
		}
	]
}
]]></Data>
</XData>

<Property name="system">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="display">
<Type>%String</Type>
</Property>
</Class>


<Class name="FHIRTemplate.DataType.CodeableConceptBase">
<Description>
CodableConcept</Description>
<Abstract>1</Abstract>
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49863.393618229</TimeChanged>
<TimeCreated>66283,49863.393618229</TimeCreated>

<Parameter name="CodeSystem">
<Description>
コードシステムのURI</Description>
</Parameter>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"coding": [
		{
			"system": "#(..#CodeSystem)#",
			"code": "#(..code)#",
			"display": "#(..display)#"
		}
	]
}
]]></Data>
</XData>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="display">
<Type>%String</Type>
</Property>
</Class>


<Class name="FHIRTemplate.DataType.Coding">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49861.47780685</TimeChanged>
<TimeCreated>66283,49861.47780685</TimeCreated>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "system":"#(..system)#",
        "version":"#(..version)#",
        "code": "#(..code)#",
        "display":"#(..display)#",
        "userSelected":"#(..userSelected)#"
}
]]></Data>
</XData>

<Property name="system">
<Type>%String</Type>
<Parameter name="MAXLEN" value="1000"/>
</Property>

<Property name="display">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="version">
<Type>%String</Type>
</Property>

<Property name="userSelected">
<Type>%Boolean</Type>
</Property>
</Class>


<Class name="FHIRTemplate.DataType.CodingBase">
<Abstract>1</Abstract>
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49865.512988024</TimeChanged>
<TimeCreated>66283,49865.512988024</TimeCreated>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "system":"#(..#CodeSystem)#",
        "version":"#(..version)#",
        "code": "#(..code)#",
        "display":"#(..display)#",
        "userSelected":"#(..userSelected)#"
}
]]></Data>
</XData>

<Parameter name="CodeSystem">
</Parameter>

<Property name="display">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="version">
<Type>%String</Type>
</Property>

<Property name="userSelected">
<Type>%Boolean</Type>
</Property>

<Method name="GetByCode">
<Description>
コードによるインスタンスの取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>CodingBase</ReturnType>
<Implementation><![CDATA[        quit $$$NULLOREF
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.DataType.ContactPoint">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49860.086276345</TimeCreated>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "system":"#(..system)#",
        "value":"#(..value)#",
        "use":"#(..use)#",
        "rank":"#(..rank)#",
        "period":"#(..period)#"
}
]]></Data>
</XData>

<Property name="system">
<Type>%String</Type>
<Required>1</Required>
<Parameter name="VALUELIST" value=",phone,fax,email,pager,url,sms,other"/>
</Property>

<Property name="value">
<Type>%String</Type>
<Required>1</Required>
</Property>

<Property name="use">
<Type>%String</Type>
<Required>1</Required>
<Parameter name="VALUELIST" value=",home,work,temp,old,mobile"/>
</Property>

<Property name="rank">
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="period">
<Type>Period</Type>
</Property>
</Class>


<Class name="FHIRTemplate.DataType.Duration">
<Super>FHIRTemplate.DataType.Quantity</Super>
<TimeChanged>66283,49868.200179645</TimeChanged>
<TimeCreated>66283,49868.200179645</TimeCreated>
</Class>


<Class name="FHIRTemplate.DataType.Identifier">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49866.783296186</TimeChanged>
<TimeCreated>66283,49866.783296186</TimeCreated>

<Property name="system">
<Type>%String</Type>
<Parameter name="MAXLEN" value="1000"/>
</Property>

<Property name="value">
<Type>%String</Type>
</Property>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "system":"#(..system)#",
    "value":"#(..value)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.DataType.Narrative">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49866.643932395</TimeChanged>
<TimeCreated>66283,49866.643932395</TimeCreated>

<Property name="status">
<Type>%String</Type>
</Property>

<Property name="div">
<Type>%String</Type>
<Parameter name="MAXLEN"/>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "status":"#(..status)#",
        "div": "<div xmlns='http://www.w3.org/1999/xhtml'>#(..div)#</div>"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.DataType.Period">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49858.142512318</TimeChanged>
<TimeCreated>66283,49858.142512318</TimeCreated>

<Property name="start">
<Type>TimeStamp</Type>
</Property>

<Property name="end">
<Type>TimeStamp</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "start":"#(..start)#",
        "end": "#(..end)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.DataType.PeriodNoEnd">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49868.8032962</TimeChanged>
<TimeCreated>66283,49868.8032962</TimeCreated>

<Property name="start">
<Type>%String</Type>
</Property>

<Property name="end">
<Type>%String</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "start":"#(..start)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.DataType.Quantity">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49869.480051437</TimeChanged>
<TimeCreated>66283,49869.480051437</TimeCreated>

<Parameter name="CodeSystem">
<Default>http://unitsofmeasure.org</Default>
</Parameter>

<Property name="value">
<Type>%Integer</Type>
</Property>

<Property name="comparator">
<Type>%String</Type>
</Property>

<Property name="unit">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "value":"#(..value)#",
        "comparator":"#(..comparator)#",
        "unit": "#(..unit)#",
        "system":"#(..#CodeSystem)#",
        "code": "#(..code)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.DataType.SimpleQuantity">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49869.538552262</TimeChanged>
<TimeCreated>66283,49869.538552262</TimeCreated>

<Property name="value">
<Type>%Integer</Type>
</Property>

<Property name="unit">
<Type>%String</Type>
</Property>

<Property name="system">
<Type>%String</Type>
</Property>

<Property name="code">
<Type>%String</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
        "value":"#(..value)#",
        "unit": "#(..unit)#",
        "system":"#(..system)#",
        "code": "#(..code)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.DataType.TimeStamp">
<ClassType>datatype</ClassType>
<ClientDataType>TIMESTAMP</ClientDataType>
<OdbcType>TIMESTAMP</OdbcType>
<SqlCategory>TIMESTAMP</SqlCategory>
<Super>%DataType</Super>
<TimeChanged>66283,49869.90011191</TimeChanged>
<TimeCreated>66283,49869.90011191</TimeCreated>

<Parameter name="FORMAT">
<Description>
出力フォーマット
1 ... YYYY-MM-DDTHH:MM:SS+timezone
2 ... YYYY-MM-DDTHH:MM:SSZ
3 ... YYYY-MM-DD
4 ... YYYY-MM-DDTHH:MM:SS.nnn+timezone</Description>
<Default>1</Default>
</Parameter>

<Method name="LogicalToDisplay">
<ClassMethod>1</ClassMethod>
<CodeMode>generator</CodeMode>
<FormalSpec>%val</FormalSpec>
<ReturnType>%String</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	If ($$$getClassType(%class)=$$$cCLASSCLASSTYPEDATATYPE) || $$$comMemberKeyGet(%class,$$$cCLASSparameter,"XMLENABLED",$$$cPARAMdefault) || $$$comMemberKeyGet(%class,$$$cCLASSparameter,"%JSONENABLED",$$$cPARAMdefault) {
         if ..#FORMAT=2 {
            $$$GENERATE(" quit $zdatetime(%val,3,7)")
        } elseif ..#FORMAT=3 {
            $$$GENERATE(" quit $zdate(%val,3)")
        } elseif ..#FORMAT=4 {
            $$$GENERATE(" quit $zdatetime(%val,3,5,3)")
        } else {
            $$$GENERATE(" quit $zdatetime(%val,3,5)")
        }
    }
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Encounter">
<Super>Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49864.761184355</TimeCreated>

<Parameter name="ResourceType">
<Default>Encounter</Default>
</Parameter>

<Property name="encounterId">
<Type>%String</Type>
</Property>

<Property name="class">
<Type>%String</Type>
</Property>

<Property name="period">
<Type>FHIRTemplate.DataType.Period</Type>
</Property>

<Property name="length">
<Type>FHIRTemplate.DataType.Duration</Type>
</Property>

<Property name="reasonCode">
<Description>
reasonCode.coding.0.systemが記入できる場合コードで。MEDIS：標準病名マスター病名交換用コードが例にある（urn:oid:1.2.392.200119.4.101.6）</Description>
<Type>FHIRCustom.CodeableConcept.ByomeiCode</Type>
<Collection>list</Collection>
</Property>

<Property name="diagnosis">
<Description>
Diagnosis</Description>
<Type>FHIRTemplate.Encounter.diagnosis</Type>
<Collection>list</Collection>
</Property>

<Property name="hospitalizationOrigin">
<Description>
Organizationリソース</Description>
<Type>FHIRTemplate.Organization</Type>
</Property>

<Property name="admitSource">
<Type>%String</Type>
</Property>

<Property name="dischargeDisposition">
<Type>%String</Type>
</Property>

<Property name="Rank">
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
</Property>

<XData name="Template">
<Description>
固定値にしたもの
meta.profile/status/class以下/diagnosis.use.coding/diagnosis.rank</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "resourceType": "#(..#ResourceType)#",
    "meta": {
        "profile": ["http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_Encounter_eClinicalSummary"]   
    },
    "identifier":[
        {
            "system": "http://jpfhir.jp/fhir/Common/CodeSystem/resourceInstance-identifier",
            "value": "#(..encounterId)#"
        }
    ],     
    "status": "finished",
    "class": "#(..class(FHIRCustom.Coding.ActCode))#",
    "period":"#(..period)#",
    "length":"#(..length)#",
    "reasonCode": ["#(..reasonCode)#"],
    "diagnosis":[
        "#(..diagnosis)#"
    ],
    "hospitalization":{
        "origin":"#(..hospitalizationOrigin(Reference))#",
        "admitSource": "#(..admitSource(FHIRCustom.CodeableConcept.AdmitSource))#",
        "dischargeDisposition": "#(..dischargeDisposition(FHIRCustom.CodeableConcept.DischargeCode))#"
    }
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.Encounter.diagnosis">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49868.275263805</TimeCreated>

<Property name="condition">
<Description>
reasonCode.coding.0.systemが記入できる場合コードで。MEDIS：標準病名マスター病名交換用コードが例にある（urn:oid:1.2.392.200119.4.101.6）
Conditionリソース</Description>
<Type>FHIRTemplate.Condition</Type>
</Property>

<Property name="role">
<Type>%String</Type>
</Property>

<Property name="rank">
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
</Property>

<XData name="Template">
<Description>
固定値にしたもの
meta.profile/status/class以下/diagnosis.use.coding/diagnosis.rank</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
            "condition": "#(..condition(FHIRTemplate.Reference))#",
            "use":{
                "coding":[
                    "#(..role(FHIRCustom.Coding.DiagnosisRoleCode))#"
                ]
            },
            "rank":"#(..rank)#"
        }
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.MedicationRequest">
<Super>FHIRTemplate.Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49867.572918853</TimeCreated>

<Parameter name="ResourceType">
<Default>MedicationRequest</Default>
</Parameter>

<Parameter name="TimingCodeSystem">
<Default>urn:oid:1.2.392.200250.2.2.20</Default>
</Parameter>

<Parameter name="RouteSystem">
<Default>http://jpfhir.jp/fhir/ePrescription/CodeSystem/route-codes</Default>
</Parameter>

<Parameter name="MethodSystem">
<Default>urn:oid:1.2.392.200250.2.2.20.30</Default>
</Parameter>

<Parameter name="DoseAndRateTypeSystem">
<Default>urn:oid:1.2.392.100495.20.2.22</Default>
</Parameter>

<Parameter name="DispenseRequestValueCodeableConceptSystem">
<Default>urn:oid:1.2.392.200250.2.2.30.10</Default>
</Parameter>

<Parameter name="DispenceRequestQuantitySystem">
<Default>urn:oid:1.2.392.200119.4.403.1</Default>
</Parameter>

<Property name="TextDiv">
<Type>%String</Type>
<Parameter name="MAXLEN" value="10000"/>
</Property>

<Property name="MedicationCodeableConcept">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="AuthoredOn">
<Type>FHIRTemplate.DataType.TimeStamp</Type>
</Property>

<Property name="Patient">
<Description>
Patient</Description>
<Type>FHIRTemplate.Patient</Type>
</Property>

<Property name="DosageInstructionPeriod">
<Type>FHIRTemplate.DataType.PeriodNoEnd</Type>
</Property>

<Property name="DosageInstructionDuration">
<Type>FHIRTemplate.DataType.Duration</Type>
</Property>

<Property name="TimingEvent">
<Description>
YYYY-MM-DD</Description>
<Type>%String</Type>
</Property>

<Property name="TimingRepetDuration">
<Type>FHIRTemplate.DataType.Duration</Type>
</Property>

<Property name="TimingCode">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="Route">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="Method">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="DoseAndRateType">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="DoseQuantity">
<Type>FHIRTemplate.DataType.SimpleQuantity</Type>
</Property>

<Property name="RateRatio">
<Type>FHIRTemplate.DataType.Quantity</Type>
</Property>

<Property name="Denominator">
<Type>FHIRTemplate.DataType.Quantity</Type>
</Property>

<Property name="DispenseRequestValueCodeableConcept">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Property name="DispenseRequestQuantity">
<Type>FHIRTemplate.DataType.SimpleQuantity</Type>
</Property>

<Property name="ExpectedSupplyDuration">
<Type>FHIRTemplate.DataType.Duration</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "resourceType":"#(..#ResourceType)#",
    "meta":{
        "profile":["http://jpfhir.jp/fhir/ePrescription/StructureDefinition/JP_MedicationRequest_ePrescription"]
    },
    "text":{
        "status":"generated",
        "div":"#(..TextDiv)#"
    },
    "identifier":[
        {
            "system":"urn:oid:1.2.392.100495.20.3.81",
            "value":"1"
        },
        {
            "system":"urn:oid:1.2.392.100495.20.3.82",
            "value":"1"
        }
    ],
    "status":"completed",
    "intent":"order",
    "medicationCodeableConcept":"#(..MedicationCodeableConcept(FHIRTemplate.DataType.CodeableConcept))#",
    "subject":"#(..Patient(FHIRTemplate.Reference))#",
    "authoredOn":"#(..AuthoredOn)#",
    "dosageInstruction": [
        {
        "extension": [
            {
                "url":"http://jpfhir.jp/fhir/core/StructureDefinition/JP_MedicationRequest_DosageInstruction_PeriodOfUse",
                "valuePeriod": "#(..DosageInstructionPeriod(FHIRTemplate.DataType.PeriodNoEnd))#"
            },
            {
                "url":"http://jpfhir.jp/fhir/core/StructureDefinition/JP_MedicationRequest_DosageInstruction_UsageDuration",
                "valueDuration":"#(..DosageInstructionDuration(FHIRTemplate.DataType.Duration))#"
            }
        ],
        "text": "内服・経口・１日２回朝夕食後 １回２錠 7日分",
        "timing": {
            "event":["#(..TimingEvent)#"],
            "repeat":{
                "boundsDuration":"#(..TimingRepetDuration(FHIRTemplate.DataType.Duration))#"
            },
            "code": "#(..TimingCode(FHIRTemplate.DataType.CodeableConcept))#"
        },
        "route": "#(..Route(FHIRTemplate.DataType.CodeableConcept))#",
        "method":"#(..Method(FHIRTemplate.DataType.CodeableConcept))#",
        "doseAndRate": [
            {
                "type":"#(..DoseAndRateType(FHIRTemplate.DataType.CodeableConcept))#",
                "doseQuantity": "#(..DoseQuantity(FHIRTemplate.DataType.SimpleQuantity))#",
                "rateRatio": {
                    "numerator":"#(..RateRatio(FHIRTemplate.DataType.Quantity))#",
                    "denominator": "#(..Denominator(FHIRTemplate.DataType.Quantity))#"
                }        
            }
        ]
        }
    ],
    "dispenseRequest":{
        "extension":[
            {
                "url":"http://jpfhir.jp/fhir/core/Extension/StructureDefinition/JP_MedicationRequest_DispenseRequest_InstructionForDispense",
                "valueCodeableConcept":"#(..DispenseRequestValueCodeableConcept(FHIRTemplate.DataType.CodeableConcept))#"
            }
        ],
        "quantity":"#(..DispenseRequestQuantity(FHIRTemplate.DataType.SimpleQuantity))#",
        "expectedSupplyDuration": "#(..ExpectedSupplyDuration(FHIRTemplate.DataType.Duration))#"            
    }
}
]]></Data>
</XData>

<Method name="GetResources">
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    // 自分自身を登録
    set ret=##super(br)
    quit:ret<1 ret // 既に登録されていれば終了

    //関連リソースの取り込み
    do:$isobject(..Patient) ..Patient.GetResources(br)
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Observation">
<Super>FHIRTemplate.Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49860.332689966</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート
https://jpfhir.jp/jpcoreV1/ObservationCommon を参考に作成
JSONの値の文字列に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "resourceType": "#(..#ResourceType)#",
  "category": [ "#(..Category)#" ],
  "code": "#(..Code)#",
  "effectiveDateTime": "#(..EffectiveDateTime)#",
  "subject": "#(..Patient(FHIRTemplate.Reference))#",
  "status": "final",
  "valueQuantity": "#(..ValueQuantity(FHIRTemplate.DataType.Quantity))#"
}
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Observation</Default>
</Parameter>

<Property name="Category">
<Type>FHIRTemplate.DataType.CodeableConceptBase</Type>
<Collection>list</Collection>
</Property>

<Property name="Code">
<Type>FHIRTemplate.DataType.CodeableConceptBase</Type>
</Property>

<Property name="EffectiveDateTime">
<Type>FHIRTemplate.DataType.TimeStamp</Type>
</Property>

<Property name="Patient">
<Description>
Patientリファレンス</Description>
<Type>FHIRTemplate.Patient</Type>
</Property>

<Property name="ValueQuantity">
<Type>FHIRTemplate.DataType.Quantity</Type>
</Property>
</Class>


<Class name="FHIRTemplate.Organization">
<Description>
DischargeSummaryの文書作成医療機関情報の仕様で作成</Description>
<Super>Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49865.167405464</TimeCreated>

<Parameter name="ResourceType">
<Default>Organization</Default>
</Parameter>

<Property name="textDiv">
<Type>FHIRTemplate.DataType.Narrative</Type>
</Property>

<Property name="prefNum">
<Description>
Extentionのidentifier.valueIdentifier.value</Description>
<Type>%String</Type>
</Property>

<Property name="tensuCode">
<Description>
点数コード　1:医科,3:歯科</Description>
<Type>%String</Type>
<Parameter name="VALUELIST" value=",1,3"/>
</Property>

<Property name="hokenNum7">
<Description>
保険医療機関番号7桁</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="7"/>
<Parameter name="MINLEN" value="7"/>
</Property>

<Property name="hokenNum10">
<Description>
保険医療機関番号10桁</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="10"/>
<Parameter name="MINLEN" value="10"/>
</Property>

<Property name="hospitalName">
<Description>
医療機関名称</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="phone">
<Description>
医療機関連絡先</Description>
<Type>%String</Type>
</Property>

<Property name="addressText">
<Description>
医療機関住所</Description>
<Type>%String</Type>
</Property>

<Property name="addressZip">
<Description>
医療機関郵便番号</Description>
<Type>%String</Type>
</Property>

<XData name="Template">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "resourceType": "#(..#ResourceType)#",
    "meta": {
        "profile": ["http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_Organization_eClinicalSummary_issuer"]
    },
    "text": "#(..textDiv)#",
    "extension":[
        {
            "url":"http://jpfhir.jp/fhir/core/Extension/StructureDefinition/JP_Organization_PrefectureNo",
            "valueIdentifier":{
                "system":"urn:oid:1.2.392.100495.20.3.21",
                "value":"#(..prefNum)#"
            }
        },
        {
            "url":"http://jpfhir.jp/fhir/core/Extension/StructureDefinition/JP_Organization_InsuranceOrganizationCategory",
            "valueIdentifier":{
                "system":"urn:oid:1.2.392.100495.20.3.22",
                "value":"#(..tensuCode)#"
            }            
        },
        {
            "url":"http://jpfhir.jp/fhir/core/Extension/StructureDefinition/JP_Organization_InsuranceOrganizationNo",
            "valueIdentifier":{
                "system":"urn:oid:1.2.392.100495.20.3.23",
                "value":"#(..hokenNum7)#"
            }            
        }
    ],
    "identifier": [
        {
            "system": "http://jpfhir.jp/fhir/Common/CodeSystem/insurance-medical-nstitution-no",
            "value":"#(..hokenNum10)#"
        }
    ],
    "type": [
        {
            "coding": [
                {
                    "system": "http://terminology.hl7.org/CodeSystem/organization-type",
                    "code": "prov",
                    "display": "#(..hospitalName)#"
                }
            ]
        }
    ],
    "name": "#(..hospitalName)#",
    "telecom": [
        {
            "system": "phone",
            "value": "#(..phone)#"
        }
    ],
    "address": [
        {
            "text":"#(..addressText)#",
            "postalCode": "#(..addressZip)#",
            "country": "JP"
        }
    ]
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.Patient">
<Description>
患者リソース</Description>
<Super>Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49867.300069704</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート
JSONの値の文字列に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "resourceType": "#(..#ResourceType)#",
  "meta": {
    "profile": [ "#(..#ProfileURI)#" ]
  },
  "identifier": [
    {
      "system": "urn:oid:1.2.392.100495.20.3.51.1#(..MedInstCode)#",
      "value": "#(..PatientId)#"
    }
  ],
  "name": [
    {
      "extension": [
        {
          "url": "http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation",
          "valueCode": "IDE"
        }
      ],
      "use": "official",
      "text": "#(..LastName)# #(..FirstName)#",
      "family": "#(..LastName)#",
      "given": [
        "#(..FirstName)#"
      ]
    },
    {
      "extension": [
        {
          "url": "http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation",
          "valueCode": "SYL"
        }
      ],
      "use": "official",
      "text": "#(..LastNameKana)# #(..FirstNameKana)#",
      "family": "#(..LastNameKana)#",
      "given": [
        "#(..FirstNameKana)#"
      ]
    }
  ],
  "telecom": [
    {
      "system": "phone",
      "value": "#(..Phone)#",
      "use": "home"
    }
  ],
  "gender": "#(..Gender)#",
  "birthDate": "#(..DOB)#",
  "address": [
    "#(..Address)#"
  ],
  "maritalStatus": "#(..MaritalStatus)#"
}
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Patient</Default>
</Parameter>

<Property name="ProfileURI">
<Type>%String</Type>
</Property>

<Property name="LastName">
<Type>%String</Type>
</Property>

<Property name="FirstName">
<Type>%String</Type>
</Property>

<Property name="LastNameKana">
<Type>%String</Type>
</Property>

<Property name="FirstNameKana">
<Type>%String</Type>
</Property>

<Property name="Phone">
<Type>%String</Type>
</Property>

<Property name="DOB">
<Type>%Date</Type>
<Parameter name="FORMAT" value="3"/>
</Property>

<Property name="Gender">
<Type>%String</Type>
<Parameter name="DISPLAYLIST" value=",male,female"/>
<Parameter name="VALUELIST" value=",1,2"/>
</Property>

<Property name="MedInstCode">
<Description>
医療機関コード</Description>
<Type>%String</Type>
<InitialExpression>"1311234567"</InitialExpression>
</Property>

<Property name="PatientId">
<Description>
患者ID</Description>
<Type>%String</Type>
</Property>

<Property name="Address">
<Type>FHIRTemplate.DataType.Address</Type>
</Property>

<Property name="MaritalStatus">
<Type>FHIRTemplate.DataType.CodeableConcept</Type>
</Property>

<Parameter name="ProfileURI">
<Default>http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_Patient_eClinicalSummary</Default>
</Parameter>
</Class>


<Class name="FHIRTemplate.Practitioner">
<Description>
患者リソース</Description>
<Super>Resource</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49869.014569469</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "resourceType": "#(..#ResourceType)#",
  "meta": {
    "profile": [
      "#(..#Profile)#"
    ]
  },
  "text": "#(..text)#",
  "name": [
    {
      "extension": [
        {
          "url": "http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation",
          "valueCode": "IDE"
        }
      ],
      "use": "official",
      "text": "#(..LastName)# #(..FirstName)#",
      "family": "#(..LastName)#",
      "given": [
        "#(..FirstName)#"
      ]
    },
    {
      "extension": [
        {
          "url": "http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation",
          "valueCode": "SYL"
        }
      ],
      "use": "official",
      "text": "#(..LastNameKana)# #(..FirstNameKana)# ",
      "family": "#(..LastNameKana)#",
      "given": [
        "#(..FirstNameKana)#"
      ]
    }
  ]  
}
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Practitioner</Default>
</Parameter>

<Parameter name="Profile">
<Default>http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_Practitioner_eClinicalSummary_author</Default>
</Parameter>

<Property name="LastName">
<Type>%String</Type>
</Property>

<Property name="FirstName">
<Type>%String</Type>
</Property>

<Property name="LastNameKana">
<Type>%String</Type>
</Property>

<Property name="FirstNameKana">
<Type>%String</Type>
</Property>

<Property name="text">
<Type>FHIRTemplate.DataType.Narrative</Type>
</Property>
</Class>


<Class name="FHIRTemplate.Reference">
<Description>
参照テンプレート</Description>
<Super>ResourceBase</Super>
<TimeChanged>66283,49867.283002339</TimeChanged>
<TimeCreated>66283,49867.283002339</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"reference": "urn:uuid:#(..ResourceId)#",
  "type": "#(..#ResourceType)#"
}
]]></Data>
</XData>
</Class>


<Class name="FHIRTemplate.Resource">
<Description>
患者リソース</Description>
<Super>FHIRTemplate.ResourceBase,FHIRTemplate.Bundle.entry</Super>
<TimeChanged>66283,49868.713665523</TimeChanged>
<TimeCreated>66283,49868.713665523</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート)
JSONの値の文字列に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
  "resourceType": "#(..#ResourceType)#",
  "meta": {
    "profile": ["#(..#Profile)#"]
  }
}
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Resource</Default>
</Parameter>

<Parameter name="Profile">
</Parameter>

<Method name="GetResources">
<FormalSpec>br:FHIRTemplate.Util.BundleResource</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
  // 自分自身を登録
  quit br.AddResource($this)
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.ResourceBase">
<Description>
患者リソース</Description>
<Abstract>1</Abstract>
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49867.254268483</TimeChanged>
<TimeCreated>66283,49867.254268483</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート
JSONの値の文字列に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
	"fullUrl": "urn:uuid:#(..ResourceId)#",
	"resource": "#($this)#"
}
]]></Data>
</XData>

<Parameter name="ResourceType">
<Default>Resource</Default>
</Parameter>

<Property name="ResourceId">
<Type>%String</Type>
<InitialExpression>$zcvt($SYSTEM.Util.CreateGUID(),"L")</InitialExpression>
<Required>1</Required>
</Property>
</Class>


<Class name="FHIRTemplate.Util.BundleResource">
<Super>%RegisteredObject</Super>
<TimeChanged>66283,49870.059892802</TimeChanged>
<TimeCreated>66283,49870.059892802</TimeCreated>

<Property name="Resource">
<MultiDimensional>1</MultiDimensional>
</Property>

<Method name="AddResource">
<Description><![CDATA[
リソースの追加
引数にしていされたリソースを追加します。
戻り値 1:追加 0:既に登録されている　<0:エラー]]></Description>
<FormalSpec>resource:FHIRTemplate.Resource</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    if '$isobject(resource) {
        quit -1
    }
        set resourceid = resource.ResourceId
        if '$data(..Resource("rindex",resourceid)) {
            set rid=$increment(..Resource("resource"))
            set ..Resource("resource",rid)=resource
            set ..Resource("rindex",resourceid)=rid
            quit 1
        }
        quit 0
]]></Implementation>
</Method>

<Method name="ExportResources">
<FormalSpec>resources:%ListOfObjects</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
        set rid="" for {
            set rid=$order(..Resource("resource",rid),1,res)
            quit:rid=""

            do resources.Insert(res)
        }
        quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTemplate.Util.CodeTable">
<Abstract>1</Abstract>
<TimeChanged>66283,49860.768941984</TimeChanged>
<TimeCreated>66283,49860.768941984</TimeCreated>

<Property name="code">
<Type>%String</Type>
</Property>

<Property name="display">
<Type>%String</Type>
</Property>

<Method name="GetByCode">
<Description>
コード値からインスタンスを取得</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>FHIRTemplate.DataType.CodeableConceptBase</ReturnType>
<Implementation><![CDATA[    quit $classmethod(..%ClassName(1),"%OpenId",code)
]]></Implementation>
</Method>

<Method name="GenerateData">
<Description>
InsertCodeに設定されたデータを登録</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set stream=##class(%Dictionary.CompiledXData).%OpenId(..%ClassName(1)_"||InsertCode").Data
    set data={}.%FromJSON(stream)

    do ..%KillExtent()
    set iter=data.data.%GetIterator()
    while iter.%GetNext(.k,.line) {
        set obj=$method($this,"%New")
        set obj.code=$piece(line,";",1),obj.display=$piece(line,";",2)
        do $method(obj,"%Save")
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="GenerateAll">
<Description>
CodeTableを継承した全クラスのデータを登録</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set rs=##class(%ResultSet).%New("%Dictionary.ClassDefinition:SubclassOf")
  set ret=rs.Execute(..%ClassName(1))
  quit:$$$ISERR(ret) ret

  while rs.Next() {
    use 0 write !,rs.GetData(1)_"のデータを登録します"
    set ret=$classmethod(rs.GetData(1),"GenerateData")
    quit:$$$ISERR(ret)
  }
  if $$$ISOK(ret) {
    use 0 write !,"正常に登録されました"
  } else {
    use 0 do $SYSTEM.OBJ.DisplayError(ret)
  }
  quit ret
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTest.BaseCodeTest">
<Super>%Persistent,JSONTemplate.Base</Super>
<TimeChanged>66283,49864.05670485</TimeChanged>
<TimeCreated>66283,49864.05670485</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "code":"#(..Code)#",
    "value":"#(..Value)#"
}
]]></Data>
</XData>

<Property name="Code">
<Type>%String</Type>
</Property>

<Property name="Value">
<Type>%String</Type>
</Property>

<Index name="IdKeyIdx">
<IdKey>1</IdKey>
<Properties>Code</Properties>
<Unique>1</Unique>
</Index>

<Method name="GetByCode">
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>FHIRTest.BaseCodeTest</ReturnType>
<Implementation><![CDATA[
    set obj=..%OpenId(code)
    quit obj
]]></Implementation>
</Method>

<Method name="GenerateData">
<Description>
データ生成</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set stream=##class(%Dictionary.CompiledXData).%OpenId(..%ClassName(1)_"||InsertCode").Data
    set data={}.%FromJSON(stream)

    do ..%KillExtent()
    set iter=data.data.%GetIterator()
    while iter.%GetNext(.k,.line) {
        set obj=..%New()
        set obj.Code=$piece(line,";",1),obj.Value=$piece(line,";",2)
        do obj.%Save()
    }
    quit $$$OK
]]></Implementation>
</Method>

<XData name="InsertCode">
<MimeType>application/json</MimeType>
<Data><![CDATA[
{ "data":[
    "1;AAAAAAAA",
    "2;BBBBBBBB",
    "3;CCCCCCCC"  ]  
}
]]></Data>
</XData>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^FHIRTest.BaseCodeTestD</DataLocation>
<DefaultData>BaseCodeTestDefaultData</DefaultData>
<IdLocation>^FHIRTest.BaseCodeTestD</IdLocation>
<IndexLocation>^FHIRTest.BaseCodeTestI</IndexLocation>
<StreamLocation>^FHIRTest.BaseCodeTestS</StreamLocation>
<Data name="BaseCodeTestDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Value</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="FHIRTest.BaseTest">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66637,36798.041</TimeChanged>
<TimeCreated>66283,49862.836165593</TimeCreated>

<Parameter name="ParamString">
<Default>defaultデータ</Default>
</Parameter>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "p1":"123456",
    "p12":"#(..#ParamString)#",
    "p13":"#(..Param1)##(..#ParamString)#---#(..Param2)#",
    "p2":"#(..Param1)#",
    "p3":"#(..Param1)# #(..Param2)#",
    "p4":"#(..Param2)#",
    "p5":"aaaaaa#(..Param1)#",
    "o1":"#(..Obj1)#",
    "o2":"#(..CodeObj)#",
    "o3":"#(..CodeData(BaseCodeTest))#",
    "a1":[
        {
            "p1":"1234",
            "o2":"#(..Obj2)#"
        },
        "#(..Obj1)#",
        "#(..List1)#"
    ],
    "a2":[
        "#(..List2)#",
        {
            "p1":5678,
            "o2":"#(..Obj2)#"
        },
        "#(..Obj1)#"
    ]
}
]]></Data>
</XData>

<Property name="Param1">
<Type>%String</Type>
</Property>

<Property name="Param2">
<Type>%Numeric</Type>
</Property>

<Property name="CodeObj">
<Type>BaseCodeTest</Type>
</Property>

<Property name="CodeData">
<Type>%String</Type>
</Property>

<Property name="Obj1">
<Type>BaseTest2</Type>
</Property>

<Property name="Obj2">
<Type>BaseTest2</Type>
</Property>

<Property name="List1">
<Type>%String</Type>
<Collection>list</Collection>
</Property>

<Property name="List2">
<Type>BaseTest2</Type>
<Collection>list</Collection>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 通常のプロパティ指定

]]></Content>
</UDLText>

<Method name="Test1">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&out]]></FormalSpec>
<Implementation><![CDATA[
    set obj=..%New()
    set obj.Param1="gggggg"
    set obj.Param2=1234.5
    set obj.CodeObj=##class(BaseCodeTest).GetByCode(1)
    set obj.Obj1=##class(BaseTest2).%New({
        "Param1":"qqqqq",
        "Param2":1111
    })
    set obj.Obj2=##class(BaseTest2).%New()
    set obj.Obj2.Param1="wwwwwww"
    set obj.Obj2.Param2=22222

    do obj.List1.Insert("list1")
    do obj.List1.Insert("list2")
    set obj1=##class(BaseTest2).%New()
    set obj1.Param1="list2 param1"
    set obj1.Param2=4444    
    do obj.List2.Insert(obj1)
    set obj1=##class(BaseTest2).%New()
    set obj1.Param1="list2 param1"
    set obj1.Param2=4444    
    do obj.List2.Insert(obj1)

    set ret=obj.OutputToDynamicObject(.out)
    set a=##class(%Stream.FileCharacter).%New()
    set a.TranslateTable="UTF8"
    set a.Filename="c:\temp\basetest2.json"
    set ret=obj.OutputToStream(a)
    if $$$ISOK(ret) {
        do a.%Save()
        use 0 write "正常終了",!
    }else {
        use 0 write "エラー発生",!
        do $SYSTEM.OBJ.DisplayError(ret)
    }
]]></Implementation>
</Method>

<Method name="Test2">
<Description>
%Newにダイナミックオブジェクトを指定した場合</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    set obj=..%New({
      "Param1":"日本語",
      "CodeObj": 3,
      "Obj1":{
          "Param1":"子オブジェクト",
          "Param2": 123.56
      },
      "List1":["list array 1","list array 2"],
      "List2":[{"Param1": "array object 1"},{"Param1": "array object 2"}]
    })
    set a=##class(%Stream.FileCharacter).%New()
    set a.TranslateTable="UTF8"
    set a.Filename="c:\temp\basetest2_test2.json"
    set ret=obj.OutputToStream(a)
    if $$$ISOK(ret) {
        do a.%Save()
        use 0 write "正常終了",!
    }else {
        use 0 write "エラー発生",!
        do $SYSTEM.OBJ.DisplayError(ret)
    }
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// CodeObjに直接コードを指定した場合

]]></Content>
</UDLText>

<Method name="Test3">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&out]]></FormalSpec>
<Implementation><![CDATA[
    set obj=..%New()
    set obj.Param1="直接コード指定"
    set obj.Param2=1234.5
    set obj.CodeObj=##class(BaseCodeTest).%New(1)
    set obj.CodeData=3
    set obj.Obj1=##class(BaseTest2).%New({
        "Param1":"qqqqq",
        "Param2":1111
    })
    set obj.Obj2=##class(BaseTest2).%New()
    set obj.Obj2.Param1="wwwwwww"
    set obj.Obj2.Param2=22222

    do obj.List1.Insert("list1")
    do obj.List1.Insert("list2")
    set obj1=##class(BaseTest2).%New()
    set obj1.Param1="list2 param1"
    set obj1.Param2=4444    
    do obj.List2.Insert(obj1)
    set obj1=##class(BaseTest2).%New()
    set obj1.Param1="list2 param1"
    set obj1.Param2=4444    
    do obj.List2.Insert(obj1)

    set ret=obj.OutputToDynamicObject(.out)
    set a=##class(%Stream.FileCharacter).%New()
    set a.TranslateTable="UTF8"
    set a.Filename="c:\temp\basetest2.json"
    set ret=obj.OutputToStream(a)
    if $$$ISOK(ret) {
        do a.%Save()
        use 0 write "正常終了",!
    }else {
        use 0 write "エラー発生",!
        do $SYSTEM.OBJ.DisplayError(ret)
    }
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTest.BaseTest2">
<Super>JSONTemplate.Base</Super>
<TimeChanged>66283,49860.950906204</TimeChanged>
<TimeCreated>66283,49860.950906204</TimeCreated>

<XData name="Template">
<Description>
JSON出力する際のテンプレート</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[
{
    "p1":"BaseTest2",
    "p2":"#(..Param1)#",
    "p3":"#(..Param1)# #(..Param2)#"
}
]]></Data>
</XData>

<Property name="Param1">
<Type>%String</Type>
</Property>

<Property name="Param2">
<Type>%Numeric</Type>
</Property>
</Class>


<Class name="FHIRTest.BundleTest">
<TimeChanged>66283,49863.760871562</TimeChanged>
<TimeCreated>66283,49863.760871562</TimeCreated>

<Method name="Test1">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&body]]></FormalSpec>
<Implementation><![CDATA[
    //#dim obj as FHIRTemplate.Bundle
    //set obj=##class(FHIRTemplate.Bundle).%New()
    //set obj.TimeStamp=$horolog

    #dim cobj as FHIRTemplate.Composition
    set cobj=##class(FHIRTemplate.Composition).%New()
    set cobj.docId="11112222"
    set cobj.docVer="1.0"
    set cobj.status=1
    set cobj.docType="18842-5" // 退院時サマリ
    set cobj.docCategory="18842-5" // 退院時サマリ

    set cobj.subject=..CreatePatient()
    set cobj.encounter=..CreateEncounter(cobj.subject)

    // 文書作成者
    set cobj.author=..CreateAuthor()
    set cobj.authorOrg=..CreateAuthorOrg()
    set cobj.custodian=cobj.authorOrg

    // セクション定義
    set sec300=##class(FHIRTemplate.Composition.section).%New()
    set sec300.title="構造情報",sec300.code=300,sec300.textDiv="こんな状況でした"
    do cobj.section.Insert(sec300)
    set sec322=##class(FHIRTemplate.Composition.section).%New()
    set sec322.title="入院詳細",sec322.code=322,sec322.textDiv="入院時の状況"
    do sec322.entry.Insert(cobj.encounter)
    do cobj.section.Insert(sec322)
    set sec342=##class(FHIRTemplate.Composition.section).%New()
    set sec342.title="入院時診断",sec342.code=342,sec342.textDiv="入院時の診断内容"
    do sec342.entry.Insert(..CreateCondition(cobj.subject,cobj.encounter))
    do cobj.section.Insert(sec342)

    // FHIRドキュメントの作成
    set bundle=##class(FHIRTemplate.Bundle).CreateFHIRDocument(cobj,..CreateAttester())

    // 証明書の取得
    /*set certfile=##class(%Stream.FileBinary).%New()
    do certfile.LinkToFile("c:\intersystems\iris2022\mgr\user1.key")
    set ret=##class(%OAuth2.JWK).RSAASN1toJWK(certfile.Read(),"password",.jwk)
    if $$$ISERR(ret) {
        use 0 write "JWK作成時にエラーが発生しました" do $SYSTEM.OBJ.DisplayError(ret)
        quit
    }
    set bundle.CertificateData=jwk // 証明書の設定
    */
    
    // オブジェクトの出力
    set ret=bundle.OutputToFile("c:\temp\bundle-test.json")
    if $$$ISOK(ret) {
        use 0 write "正常終了",!
    }else {
        use 0 write "エラー発生",!
        do $SYSTEM.OBJ.DisplayError(ret)
    }
]]></Implementation>
</Method>

<Method name="CreatePatient">
<ClassMethod>1</ClassMethod>
<ReturnType>FHIRTemplate.Patient</ReturnType>
<Implementation><![CDATA[
    #dim obj as FHIRTemplate.Patient
    set obj=##class(FHIRTemplate.Patient).%New()
    
    set obj.PatientId="11122"
    set obj.LastName="鈴木",obj.FirstName="喜朗"
    set obj.LastNameKana="スズキ",obj.FirstNameKana="ヨシロウ"
    set obj.DOB=$zdateh("1952-09-13",3)
    set obj.Gender=1
    set obj.Address={"postalCode":"5300003","text":"大阪府大阪市北区堂島2-1-31"}
    set obj.Phone="06-4797-3388"
    quit obj
]]></Implementation>
</Method>

<Method name="CreateEncounter">
<Description>
入院情報</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>patient:FHIRTemplate.Patient</FormalSpec>
<ReturnType>FHIRTemplate.Encounter</ReturnType>
<Implementation><![CDATA[
    #dim obj as FHIRTemplate.Encounter
    set obj=##class(FHIRTemplate.Encounter).%New()
    set obj.encounterId="1311234567-2020-001234562022040200005"
    set obj.class="IMP"
    set obj.period={"startTime":($zdateh("2020-09-01",3)),"endTime":($zdateh("2020-09-18",3))}
    set obj.length={"value":7,"unit":"日","code":"d"}
    do obj.reasonCode.Insert(##class(FHIRCustom.CodeableConcept.ByomeiCode).GetByCode("B0EF"))
    set obj.admitSource=1 // 家庭からの入院

    set diag=##class(FHIRTemplate.Encounter.diagnosis).%New()
    set diag.condition=..CreateCondition(patient,obj)
    set diag.role="AD"
    set diag.rank=1
    do obj.diagnosis.Insert(diag)

    quit obj
]]></Implementation>
</Method>

<Method name="CreateAuthor">
<Description>
文書作成者</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>FHIRTemplate.Practitioner</ReturnType>
<Implementation><![CDATA[
    #dim obj as FHIRTemplate.Practitioner
    set obj=##class(FHIRTemplate.Practitioner).%New()

    set obj.LastName="神奈川",obj.FirstName="花子"
    set obj.LastNameKana="カナガワ",obj.FirstNameKana="ハナコ"
    quit obj
]]></Implementation>
</Method>

<Method name="CreateAttester">
<Description>
文書法的責任者</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>FHIRTemplate.Practitioner</ReturnType>
<Implementation><![CDATA[
    #dim obj as FHIRTemplate.Practitioner
    set obj=##class(FHIRTemplate.Practitioner).%New()

    set obj.LastName="関",obj.FirstName="任太郎"
    set obj.LastNameKana="セキ",obj.FirstNameKana="ニンタロウ"
    quit obj
]]></Implementation>
</Method>

<Method name="CreateAuthorOrg">
<Description>
文書作成医療機関</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>FHIRTemplate.Practitioner</ReturnType>
<Implementation><![CDATA[
    #dim obj as FHIRTemplate.Organization
    set obj=##class(FHIRTemplate.Organization).%New()

    set obj.textDiv={"status":"generated","div":"文書作成医療機関"}
    set obj.prefNum="13" //都道府県番号
    set obj.tensuCode="1"
    set obj.hokenNum7="1234567"
    set obj.hokenNum10="1234567890"
    set obj.hospitalName="厚生労働省第一病院"
    set obj.phone="0120-012-0123"
    set obj.addressText="神奈川県横浜市港区１－２－３"
    set obj.addressZip="111-2222"
    return obj
]]></Implementation>
</Method>

<Method name="CreateCondition">
<ClassMethod>1</ClassMethod>
<FormalSpec>patient:FHIRTemplate.Patient,encounter:FHIRTemplate.Encounter</FormalSpec>
<ReturnType>FHIRTemplate.Condition</ReturnType>
<Implementation><![CDATA[
    set condition=##class(FHIRTemplate.Condition).%New()
    set condition.textDiv={"status":"additional","div":"こんな状況でした"}
    set condition.patientStatusValue="1311234567-2020-00123456"
    set condition.clinicalStatus="active"
    set condition.verificationStatus="provisional"
    set condition.code="B0EF"
    set condition.bodySite="1244"
    set condition.subject=patient,condition.encounter=encounter
    set condition.age={"value":10,"unit":"歳","code":"a"}
    set condition.recordedDate=$zdateh("2020-09-01",3)
    return condition
]]></Implementation>
</Method>
</Class>


<Class name="FHIRTest.PatientTest">
<TimeChanged>66283,49867.143432868</TimeChanged>
<TimeCreated>66283,49867.143432868</TimeCreated>

<Method name="Test1">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    #dim obj as FHIRTemplate.Patient
    set obj=##class(FHIRTemplate.Patient).%New()
    set obj.ProfileURI="http://jpfhir.jp/fhir/eClinicalSummary/StructureDefinition/JP_Patient_eClinicalSummary"
    set obj.PatientId="11122"
    set obj.LastName="鈴木",obj.FirstName="喜朗"
    set obj.LastNameKana="スズキ",obj.FirstNameKana="ヨシロウ"
    set obj.DOB=$zdateh("1952-09-13",3)
    set obj.Gender=1
    set obj.Address={
        "line":"堂島2-1-31 京阪堂島ビル 4F",
        "city":"大阪市北区",
        "state":"大阪府",
        "postalCode":"530-0003"}
    set obj.Phone="06-4797-3388"
    set ret=obj.OutputToFile("c:\temp\patient.json")
    if $$$ISOK(ret) {
        use 0 write "正常終了",!
    } else {
        use 0 write "エラー発生",!
        do $SYSTEM.OBJ.DisplayError(ret)
    }
]]></Implementation>
</Method>
</Class>


<Class name="JSONTemplate.Base">
<Abstract>1</Abstract>
<IncludeCode>%occErrors</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>66351,77264.9763664</TimeChanged>
<TimeCreated>66283,49862.778693992</TimeCreated>
<DependsOn>JSONTemplate.Generator</DependsOn>

<XData name="Template">
<Description>
JSON出力する際のテンプレート
JSONの値に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
#(..プロパティ名(テンプレート名))#を指定すると、特定のプロパティに対して
テンプレートとして使用するクラスを指定できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<MimeType>application/json</MimeType>
<Data><![CDATA[{}
]]></Data>
</XData>

<Parameter name="%JSONENABLED">
<Default>1</Default>
</Parameter>

<Method name="OutputToDevice">
<Description>
標準デバイスへの出力</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        set ret=..OutputToDynamicObject(.tpl)
        quit:$$$ISERR(ret)

        // フォーマット出力
        set out=##class(%JSON.Formatter).%New()
        set out.Indent=1
        set ret=out.Format(tpl)
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>

<Method name="OutputToFile">
<Description>
ファイルへの出力</Description>
<FormalSpec>filename:%String,charset:%String="UTF8"</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        set ret=..OutputToDynamicObject(.tpl)
        quit:$$$ISERR(ret)

        open filename:("WNS"_$select(charset'="":"K\"_charset_"\",1:"")):5
        if '$test {
            set ret=$$$ERROR($$$FileCanNotOpen,filename)
            quit
        }

        #dim out as %JSON.Formatter
        set out=##class(%JSON.Formatter).%New()
        set out.Indent=1

        use filename
        set ret=out.Format(tpl)
    } catch err {
        set ret=err.AsStatus()
    }
    close filename
    quit ret
]]></Implementation>
</Method>

<Method name="OutputToStream">
<Description>
ストリームへの出力</Description>
<FormalSpec>stream:%Stream</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        set ret=..OutputToDynamicObject(.tpl)
        quit:$$$ISERR(ret)

        do tpl.%ToJSON(stream)
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>

<Method name="OutputToDynamicObject">
<Description>
ダイナミックオブジェクトへの出力</Description>
<FormalSpec><![CDATA[&obj:%DynamicAbstractObject]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    set obj=..Process($this,.ret)
    quit ret
]]></Implementation>
</Method>

<Method name="Process">
<Description>
テンプレートからJSONデータを出力
テンプレートを元にプロパティを挿入したJSONオブジェクトを返す</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec><![CDATA[obj:%RegisteredObject,&ret:%Status]]></FormalSpec>
<ReturnType>%DynamicAbstractObject</ReturnType>
<Implementation><![CDATA[
    // Abstractクラスの場合は生成しない
    if %class.Abstract {
        do %code.WriteLine(" set ret=$$$NotImplemented quit """"")
        quit $$$OK
    }
    set ret=$$$OK,lineno=0
    try {
        set %debug=$get(%debug,0)
        // プロパティの一覧と型を取得
        set generator=##class(JSONTemplate.Generator).%New()
        set ret=generator.GetPropertyList(%compiledclass)
        quit:$$$ISERR(ret)

        // パラメータの一覧を取得
        set key="" for {
            set pdef=%compiledclass.Parameters.GetNext(.key)
            quit:key=""
            set generator.params(pdef.Name)=$lb(pdef.Default)
        }
        do %code.WriteLine(" set ret=$$$OK try {")

        // OnPreProcess()メソッドがあれば呼び出す
        set mdef=##class(%Dictionary.CompiledMethod).%OpenId(%class.Name_"||OnPreProcess")
        if $isobject(mdef)&&(mdef.Implementation.Size>0) {
            do %code.WriteLine(" set ret=..OnPreProcess(obj) quit:$$$ISERR(ret)")
        }

        // テンプレートを読み込む
        Set compiledXdata=##class(%Dictionary.CompiledXData).%OpenId(%class.Name_"||Template")
        set tplstm=compiledXdata.Data
        do tplstm.Rewind()

        // JSONからオブジェクトを作成
        set tpl={}.%FromJSON(tplstm)
        if 'tpl.%IsA("%DynamicObject") {
            set ret=$$$ERROR(5001,"テンプレートがJSON objectではありません")
            quit
        }
        // JSON出力処理の生成
        //set code=##class(%Stream.TmpCharacter).%New()
        ////set code.TranslateTable="UTF8"
        //do ##class(Generator).InitJSONString()
        set objstr=generator.SetJSONString(tpl)
        set ret=generator.GenerateObject("object",tpl,objstr)
        quit:$$$ISERR(ret)
        do generator.outstream.Rewind()
        while 'generator.outstream.AtEnd {
            set line=generator.outstream.ReadLine()
            if $zstrip(line,"<>W")?1"$tpl"1.N {
                // $tplで始まる行があれば、JSON文字列出力
                write:%debug "line "_line,!
                do %code.WriteLine("  set "_$piece(line,"$",2)_"="_generator.jsonstring(+$piece(line,"$tpl",2)).%ToJSON())
            } else {
                do %code.WriteLine("   "_line)
            }
        }

        do %code.WriteLine(" } catch err { set ret=err.AsStatus() }")
        do %code.WriteLine(" quit $select($$$ISOK(ret):"_objstr_",1:"""")")

    } catch err {
        set ret=$SYSTEM.Status.AppendStatus($$$ERROR(5001,"エラーが発生しました"),err.AsStatus())
    }
    quit ret
]]></Implementation>
</Method>

<Method name="%OnNew">
<CodeMode>objectgenerator</CodeMode>
<FormalSpec>initvalue:%DynamicObject=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    quit:%class.Abstract $$$OK
    do %code.WriteLine(" quit:initvalue="""" $$$OK")
    do %code.WriteLine(" quit:'$isobject(initvalue)||('initvalue.%IsA(""%DynamicObject"")) $$$ERROR(5001,""%DynamicObjectを継承したインスタンスを指定してください"")")
    do %code.WriteLine(" set ret=$$$OK try {")

    set ret=$$$OK
    set key="" for {
        set pdef=%compiledclass.Properties.GetNext(.key)
        quit:key=""
        continue:pdef.Name["%"

        set tdef=##class(%Dictionary.ClassDefinition).%OpenId(pdef.Type,,.ret)
        if $isobject(tdef) {
            if $classmethod(pdef.Type,"%Extends","JSONTemplate.Base") {
                if pdef.Collection'="" {
                    do %code.WriteLine(" if $isobject(initvalue."_pdef.Name_") { if 'initvalue."_pdef.Name_".%Extends(""%Library.DynamicArray"") { set ret=$$$ERROR(5001,""プロパティ"_pdef.Name_"はリストコレクションです"") quit }")
                    do %code.WriteLine("   set iter=initvalue."_pdef.Name_".%GetIterator() while iter.%GetNext(.mkey,.mval) { do:$isobject(mval) .."_pdef.Name_".Insert(##class("_pdef.Type_").%New(mval)) }}")
                } else {
                    do %code.WriteLine(" set:$isobject(initvalue."_pdef.Name_") .."_pdef.Name_"=##class("_pdef.Type_").%New(initvalue."_pdef.Name_")")
                }
            } else {
                if pdef.Collection'="" {
                    do %code.WriteLine(" if $isobject(initvalue."_pdef.Name_") { if 'initvalue."_pdef.Name_".%Extends(""%Library.DynamicArray"") { set ret=$$$ERROR(5001,""プロパティ"_pdef.Name_"はリストコレクションです"") quit }")
                    do %code.WriteLine("   set iter=initvalue."_pdef.Name_".%GetIterator() while iter.%GetNext(.mkey,.mval) { do .."_pdef.Name_".Insert(mval) }}")
                } else {
                    do %code.WriteLine(" set:initvalue.%IsDefined("""_pdef.Name_""") .."_pdef.Name_"=initvalue."_pdef.Name)
                }
            }
        } else {
            set ret=$$$ERROR(5001,"プロパティ"_pdef.Name_"の型"_pdef.Type_"がありません")
            quit
        }
        quit:$$$ISERR(ret)
    }
    do %code.WriteLine("} catch err {")
    do %code.WriteLine("    set ret=err.AsStatus()")
    do %code.WriteLine("} quit ret")
    quit ret
]]></Implementation>
</Method>

<Method name="GetByCode">
<Description>
コード文字列からインスタンスを取得
継承先にて実装</Description>
<Abstract>1</Abstract>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>JSONTemplate.Base</ReturnType>
<Implementation><![CDATA[	quit ""
]]></Implementation>
</Method>

<Method name="OnPreProcess">
<Description>
JSON出力前処理
JSONを出力する前に実行されるコールバック</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>obj:JSONTemplate.Base</FormalSpec>
<ReturnType>%Status</ReturnType>
</Method>
</Class>


<Class name="JSONTemplate.Generator">
<Super>%RegisteredObject</Super>
<TimeChanged>66640,84369.948479</TimeChanged>
<TimeCreated>66283,49864.370654037</TimeCreated>

<Property name="outstream">
<Description>
出力データ</Description>
<Type>%Stream.TmpCharacter</Type>
</Property>

<Property name="jsonstring">
<Description>
JSON文字列</Description>
<MultiDimensional>1</MultiDimensional>
</Property>

<Property name="props">
<Description>
プロパティ一覧
props(プロパティ名)=$lb(プロパティクラス,クライアントデータタイプ,Requiredかどうか,コレクションかどうか,LogicalToDisplayを使用するかどうか)</Description>
<MultiDimensional>1</MultiDimensional>
</Property>

<Property name="params">
<Description>
パラメータ一覧</Description>
<MultiDimensional>1</MultiDimensional>
</Property>

<Method name="GenerateObject">
<Description>
JSON出力する処理の生成
JSONの値の文字列に#(..プロパティ名)#または#(..#パラメータ名)#を指定することで
プロパティの値をJSON形式で出力できます。
プロパティの型がJSONTemplate.Baseを継承したクラスの場合、
そのクラスのテンプレートからJSON出力します。</Description>
<FormalSpec>type:%String,template:%DynamicAbstractObject,path:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        set dynamic=$select(type="array":1,1:0)
        
        // templateのメンバーを順に取り出す
        set iter=template.%GetIterator()
#if $SYSTEM.Version.GetMajor()>2021
        while iter.%GetNext(.mkey,.value,.mtype) {
#Else
        while iter.%GetNext(.mkey,.value) {
            set mtype=$select($isobject(value):$select(value.%IsA("%DynamicArray"):"array",1:"object"),1:"string")
#Endif
             if mtype="object" {
                // メンバーがオブジェクトの場合
                set path2=$select(dynamic:..SetJSONString(value),1:path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                set ret=..GenerateObject("object",value,path2)
                quit:$$$ISERR(ret)
                do:type="object" ..outstream.WriteLine(" do:"_path2_".%Size()=0 "_path_".%Remove("""_mkey_""")")
                do:type="array" ..outstream.WriteLine(" do:"_path2_".%Size()>0 "_path_".%Push("_path2_")")
                continue
            } elseif mtype="array" {
                // メンバーがarray の場合
                // Array部分の生成
                set path2=$select(dynamic:..SetJSONString(value),1:path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                set ret=..GenerateObject("array", value, path2)
                quit:$$$ISERR(ret)
                do:type="object" ..outstream.WriteLine(" do:"_path2_".%Size()=0 "_path_".%Remove("""_mkey_""")")
                do:type="array" ..outstream.WriteLine(" do:"_path2_".%Size()>0 "_path_".%Push("_path2_")")
                continue
            } elseif value'["#("&&(value'[")#") {
                // 固定文字列の場合
                if type="array"&&(dynamic) {
                    do ..OutputValue(value,path_".%Get("_mkey_")")
                }
                continue
            } elseif value="#($this)#" {
                // 現在のインスタンスでデフォルトのテンプレートを使って出力する
                // objectやarray形式の置き換え
                set token=$piece($piece(value,")#"),"#(",2)
                set ret=..GetParamInfo(token,.info)
                quit:$$$ISERR(ret)
                //zw info
                set:'dynamic&&(type="array") dynamic=mkey+1
                do ..OutputObject(info, path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                do template.%Set(mkey,"")
                continue
            } elseif value?1"#("2"."1E1A.AN.1(1"("1(1A.AN).(1"."1A.AN)1")")1")#" {
                // objectやarray形式の置き換え
                set token=$piece($piece(value,")#"),"#(",2)
                set ret=..GetParamInfo(token,.info)
                quit:$$$ISERR(ret)
                //zw info
                set:'dynamic&&(type="array") dynamic=mkey+1
                if $lg(info)="param" {
                    // パラメータの場合
                    if type="array" {
                        do ..OutputParameter($lg(info,2),path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                        do template.%Set(mkey,"")
                    } else {
                        // テンプレートを変更した際にパラメータ値が異なる点を修正
                        //do template.%Set(mkey,$lg(info,3)) // 値を代入してしまう
                        do ..OutputParameter($lg(info,2),path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                        do template.%Set(mkey,"")
                    }
                    continue
                }
                if $lg(info)="prop" {
                    // プロパティの場合
                    if $lg(info,4)="" {
                        // クライアントデータタイプがNULLの場合(型がオブジェクトの場合)
                        do ..OutputObject(info, path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                    } else {
                        do ..OutputProperty(info, path_"."_$select(type="object":mkey,1:"%Get("_mkey_")"))
                    }
                    do template.%Set(mkey,"")
                    continue
                }
                continue
           }
            // 文字列、数字の置き換え
            // 最初に#)がないかをチェック
            set code=""
            set literal=$piece(value,"#(")
            if $length(literal,")#")>1 {
                set ret=$$$ERROR(5001,"「#(」が見つかりません")
                quit
            }
            set code="",codeopen=0
            set:literal'="" code=""""_$replace(literal,"""",""""""),codeopen=1

            // プロパティ、パラメータを抽出
            for v=2:1:$length(value,"#(") {
                set var=$piece(value,"#(",v)
                // )#があることをチェック
                set l=$length(var,")#")
                if l'=2 {
                    set ret=$$$ERROR(5001,"「)#」が"_$select(l>2:"多すぎます",1:"見つかりません"))
                    quit
                }
                set literal=$piece(var,")#",2)
                set var=$piece(var,")#")
                quit:$$$ISERR(ret)
                set ret=..GetParamInfo(var,.info)
                quit:$$$ISERR(ret)
                if $lg(info)="param" {
                    //set code=code_$select(code'=""&&codeopen:"""_",code'="":"_",1:"")_"obj.#"_$lg(info,2),codeopen=0
                    set code=code_$select(code'=""&&codeopen:"",code'="":"_""",1:"""")_$replace($lg(info,3),"""",""""""),codeopen=1
                } elseif $lg(info)="prop" {
                    set code=code_$select(code'=""&&codeopen:"""_",code'="":"_",1:"")_"obj."_$lg(info,2),codeopen=0
                }
                set:literal'="" code=code_$select(code'=""&&codeopen:"",code'="":"_""",1:"""")_$replace(literal,"""",""""""),codeopen=1
            }
            set code=code_$select(codeopen:"""",1:"")
            set:'dynamic&&(type="array") dynamic=mkey+1
            // 出力
            if type="array" {
                do ..outstream.WriteLine(" do "_path_".%Push("_code_")")
            } else {
                do ..outstream.WriteLine(" set "_path_"."_mkey_"="_code)
            }
            do template.%Set(mkey,"")
            quit:$$$ISERR(ret)
#if $SYSTEM.Version.GetMajor()>2021
        }
#else
        }
#endif
        // arrayの場合、ノードを削除
        if type="array" {
            set size=template.%Size()
            for i=0:1:size {
                do template.%Pop()
            }
        }
    } catch err {
        set ret=$SYSTEM.Status.AppendStatus($$$ERROR(5001,"エラーが発生しました"),err.AsStatus())
    }
    quit ret
]]></Implementation>
</Method>

<Method name="GetParamInfo">
<Description>
変数の構文解析
パラメータやプロパティの属性を取得する
info ... $lb("param",paramname,default)
         $lb("this","",%class.Name,"object")
         $lb("prop",propname,proptype,classtype,required,collection,displayflg,templateclass)</Description>
<FormalSpec><![CDATA[token:%String,&info]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set info=""
    set ret=$$$OK
    try {
        if token="$this" {
            set info=$lb("this","",%class.Name,"object")
        } elseif $extract(token,1,3)="..#" {
            // パラメータ値代入
            set token=$extract(token,4,*)
            write:%debug "パラメータ:",token,!
            // パラメータチェック
            if token="" {
                set ret=$$$ERROR(5001,"パラメータ名が存在しません")
                quit
            }
            if '$data(..params(token),val) {
                set ret=$$$ERROR(5001,"パラメータ「"_token_"」が存在しません")
                quit
            }
            set info=$lb("param",token)_val
        } elseif $extract(token,1,2)=".." {
            set token=$extract(token,3,*)
            // パラメータチェック
            write:%debug "プロパティ:",token,!
            // テンプレートクラスチェック
            if token["(" {
                set templateclass=$piece($piece(token,")"),"(",2)
                set token=$piece(token,"(")
                if templateclass="" {
                    set ret=$$$ERROR(5001,"プロパティ"_token_"のテンプレート名が指定されていません")
                    quit
                }
            }
            if token="" {
                set ret=$$$ERROR(5001,"プロパティ名が存在しません")
                quit
            }
            if '$data(..props(token),val) {
                set ret=$$$ERROR(5001,"プロパティ「"_token_"」が存在しません")
                quit
            }
            set info=$lb("prop",token)_val_$select($data(templateclass):$lb(templateclass),1:"")
        } else {
            set ret=$$$ERROR(5001,"パラメータ、プロパティの指定が誤っています 値:"_token)
            quit
        }
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>

<Method name="OutputParameter">
<Description>
パラメータ値の出力</Description>
<FormalSpec>param:%String,path:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    write:%debug "output parameter",!
    set base=$piece(path,".",1,*-1)_".",current=$piece(path,".",*)
    if current["(" {
        set cmd=base_$zstrip($replace(current,"%Get","%Push"),">W",")")
        do ..outstream.WriteLine(" do "_base_"%Push(obj.#"_param_")")
    } else {
        do ..outstream.WriteLine(" set "_path_"=obj.#"_param)
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="OutputValue">
<Description>
固定文字列の出力</Description>
<FormalSpec>value:%String,path:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    write:%debug "output value",!
    set base=$piece(path,".",1,*-1)_"."
    do ..outstream.WriteLine(" do "_base_"%Push("_$select((+value)=value:value,1:""""_$replace(value,"""","""""")_""")"))
    quit $$$OK
]]></Implementation>
</Method>

<Method name="OutputObject">
<Description>
オブジェクト出力</Description>
<FormalSpec>info:%List,path:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    write:%debug "output Object",!
    set propstr=$select($lg(info,2)'="":"obj."_$lg(info,2),1:"obj")
    set templatestr=$select($lg(info,8)'="":"##class("_$lg(info,8)_")",1:propstr)
    set templateclass=$select($lg(info,8)'="":$lg(info,8),1:$lg(info,3))

    set base=$piece(path,".",1,*-1)_".",current=$piece(path,".",*)
    if $lg(info,6)'="" {
        // プロパティがリスト形式の場合
        //do ..outstream.WriteLine(" if $isobject("_propstr_") {")
        // ListプロパティがDynamicArrayに出来ないので削除
        //do ..outstream.WriteLine(" if "_propstr_".%Extends(""%Library.DynamicArray"") {")
        //do ..outstream.WriteLine("   set iter="_propstr_".%GetIterator() for loop=1:1 { quit:'iter.%GetNext(.k,.v)  set dobj=##class("_templateclass_").Process(v,.ret) quit:$$$ISERR(ret)  continue:dobj.%Size()=0  do "_base_"%Push(dobj) quit:$$$ISERR(ret) } quit:$$$ISERR(ret)")
        //do ..outstream.WriteLine(" } else {")
        do ..outstream.WriteLine("   set key="""" for loop=1:1 { set obj2="_propstr_".GetNext(.key) quit:key=""""  set dobj="_$select($lg(info,8)'="":"##class("_templateclass_")",1:"obj2")_".Process(obj2,.ret) quit:$$$ISERR(ret)  continue:dobj.%Size()=0  do "_base_"%Push(dobj) quit:$$$ISERR(ret) } quit:$$$ISERR(ret)")
        //do ..outstream.WriteLine(" }}")
    } else {
        // プロパティがオブジェクトの場合
        do ..outstream.WriteLine(" if $isobject("_propstr_") {")

        // プロパティにDynamicObjectが割り当てられれている場合
        do ..outstream.WriteLine(" if "_propstr_".%Extends(""%Library.DynamicObject"") {")
        do ..outstream.WriteLine("   set dobj=##class("_templateclass_").Process("_propstr_",.ret) quit:$$$ISERR(ret)")
        if $lg(info)="this" {
            // $thisの場合、自己参照に陥るのを防ぐため、プロパティの型が自分自身と同じかをチェック
            do ..outstream.WriteLine(" } elseif "_propstr_".%ClassName(1)="""_$lg(info,3)_""" {")
            do ..outstream.WriteLine("   set ret=$$$ERROR(5001,""テンプレートとオブジェクトの型が一致しているため出力できません class=""_"_propstr_".%ClassName(1)) quit")
        }
        // プロパティ値が指定されたテンプレートクラスを継承している場合
        do ..outstream.WriteLine(" } elseif "_propstr_".%Extends("""_$lg(info,3)_""") {")
        do ..outstream.WriteLine("   set dobj="_templatestr_".Process("_propstr_",.ret)  quit:$$$ISERR(ret)")
        do ..outstream.WriteLine(" } else { set ret=$$$ERROR(5001,""プロパティ"_$lg(info,2)_"の型が誤っています class=""_"_propstr_".%ClassName(1)) quit }")

        // プロパティへの登録
        if current["(" {
            // リスト形式の場合
            //set cmd=base_$zstrip($replace(current,"%Get","%Set"),">W",")")
            do ..outstream.WriteLine("   do "_base_"%Push(dobj) quit:$$$ISERR(ret)")
        } else {
            // オブジェクト形式の場合
            do ..outstream.WriteLine("   set "_path_"=dobj do:dobj.%Size=0 "_base_"%Remove("""_current_""")")
        }
        
        do ..outstream.WriteLine(" } else {")
        // プロパティがNULLの場合
        if current["(" {
            do:$lg(info,5) ..outstream.WriteLine("   set ret=$$$ERROR(5001,""プロパティ"_$lg(info,2)_"がNULLになっています"") quit")
        } else {
            do ..outstream.WriteLine("   "_$select('$lg(info,5):"do "_base_"%Remove("""_current_""")",1:"set ret=$$$ERROR(5001,""プロパティ"_$lg(info,2)_"がNULLになっています"") quit"))
        }
        do ..outstream.WriteLine(" }")
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="OutputProperty">
<Description>
プロパティ値の出力</Description>
<FormalSpec>info:%List,path:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    write:%debug "output Property",!
    set propstr=$select($lg(info,2)'="":"obj."_$lg(info,2),1:"obj")
    set base=$piece(path,".",1,*-1)_".",current=$Piece(path,".",*)

    // プロパティがリストの場合
    if $lg(info,6)'="" {
        // 必ずオブジェクトが入っているため、この条件をコメントアウト
        //do ..outstream.WriteLine(" if "_propstr_"="""" {")
        //do ..outstream.WriteLine(" } elseif "_propstr_".%Extends(""%Library.DynamicArray"") {")
        //do ..outstream.WriteLine("   set iter="_propstr_".%GetIterator() for loop=1:1 { quit:'iter.%GetNext(.k,.v)  do "_base_"%Push(v) }")
        //do ..outstream.WriteLine(" } else {")
        do ..outstream.WriteLine("   set key="""" for loop=1:1 { set v="_propstr_".GetNext(.key) quit:key=""""  do "_base_"%Push(v) }")
        //do ..outstream.WriteLine(" }")
    } else {
        
        if current["(" {
            // Arrayの場合
            if $lg(info,8)'="" {
                do ..outstream.WriteLine(" if "_propstr_"'="""" { set objtmp=##class("_$lg(info,8)_").GetByCode("_propstr_") do:"_propstr_"'="""" "_base_"%Push(##class("_$lg(info,8)_").Process(objtmp,.ret)) quit:$$$ISERR(ret) }")
            } else {
                do ..outstream.WriteLine(" do:"_propstr_"'="""" "_base_"%Push("_$select($lg(info,7):"##class("_%class.Name_")."_$lg(info,2)_"LogicalToDisplay("_propstr_")",1:propstr)_")")
            }
        } else {
            // Objectの場合
            if $lg(info,8)'="" {
                // 出力用テンプレートクラスが指定されている場合GetByCodeでオブジェクトを取得
                do ..outstream.WriteLine(" set objtmp=$select("_propstr_"'="""":##class("_$lg(info,8)_").GetByCode("_propstr_"),1:"""")")
                do ..outstream.WriteLine(" if $isobject(objtmp) { set "_path_"=##class("_$lg(info,8)_").Process(objtmp,.ret) } else { do "_base_"%Remove("""_$piece(path,".",*)_""") }")
                quit
            }
            do:'$lg(info,5) ..outstream.WriteLine(" if "_propstr_"="""" { do "_base_"%Remove("""_$piece(path,".",*)_""") } else {")
            if $lg(info,7) {
                // DISPLAYLIST,VALUELISTがある場合
                do ..outstream.WriteLine(" set "_path_"=##class("_%class.Name_")."_$lg(info,2)_"LogicalToDisplay("_propstr_")")
            } elseif ",INTEGER,NUMERIC,DOUBLE,BIGINT,"[(","_$lg(info,4)_",") {
                // 数値型の場合、+演算子を使って数値化
                do ..outstream.WriteLine(" set "_path_"=+("_propstr_")")
            } elseif $lg(info,4)="BOOLEAN" {
                // Boolean型の場合、True,falseに変換
                do ..outstream.WriteLine(" do "_base_"%Set("""_current_""","_propstr_",""boolean"")")
            } else {
                do ..outstream.WriteLine(" set "_path_"="_propstr)
            }
            do:'$lg(info,5) ..outstream.WriteLine(" }")
        }
    }
    quit $$$OK
]]></Implementation>
</Method>

<Method name="SetJSONString">
<Description>
JSONStringの設定行を作成</Description>
<FormalSpec>tpl:%DynamicAbstractObject</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    //set %jsonstring($increment(%jsonstring))=tpl
    set ..jsonstring($increment(..jsonstring))=tpl
    do ..outstream.WriteLine("")
    do ..outstream.WriteLine("$tpl"_..jsonstring)
    quit "tpl"_..jsonstring
]]></Implementation>
</Method>

<Method name="GetPropertyList">
<Description>
対象クラスのプロパティの一覧を取得する
props(プロパティ名)=$lb(プロパティクラス,クライアントデータタイプ,Requiredかどうか,コレクションかどうか,LogicalToDisplayを使用するかどうか)</Description>
<FormalSpec>compiledclass:%Dictionary.CompiledClass</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    set ret=$$$OK
    try {
        set key="" for {
            set pdef=compiledclass.Properties.GetNext(.key)
            quit:key=""
            set tdef=##class(%Dictionary.ClassDefinition).%OpenId(pdef.Type,,.ret)
            //quit:$$$ISERR(ret)
            set display=$select(pdef.Parameters.GetAt("DISPLAYLIST")'=""||(pdef.Parameters.GetAt("FORMAT")'=""):1,1:0)
            set classtype=$select($isobject(tdef)&&(tdef.ClassType="datatype"):tdef.ClientDataType,$extract(pdef.Type)="%":tdef.ClientDataType,1:"")

            set ..props(pdef.Name)=$lb(pdef.Type,classtype,pdef.Required,pdef.Collection,display)
        }
    } catch err {
        set ret=err.AsStatus()
    }
    quit ret
]]></Implementation>
</Method>
</Class>
</Export>
